<script type="text/javascript">
    var gWireRepeaterCfg = {};
    var FREQ_2G = 0;
    var FREQ_5G = 1;
    var FREQ_5G1 = 2;
    var FREQ_5G4 = 3;
    var FREQ_BS  = 4;
    gWireRepeaterCfg[FREQ_2G] = {"ssid":"", "encryption":"", "key":""};
	gWireRepeaterCfg[FREQ_5G] = {"ssid":"", "encryption":"", "key":""};
	gWireRepeaterCfg[FREQ_5G1] = {"ssid":"", "encryption":"", "key":""};
	gWireRepeaterCfg[FREQ_5G4] = {"ssid":"", "encryption":"", "key":""};
	gWireRepeaterCfg[FREQ_BS] = {"ssid":"", "encryption":"", "key":"", "bs_enable":""};
	function init()
	{
		var getApStatusHd = null;
		var retryCount;
		var freqArr = [];
		var BS_SWITCH_ENABLE = "1";
        var switchBS;
        var switchState = false;
        var bands = ["2G", "5G", "5G1", "5G2", "BS"];

        var BAND_1 = 0;
        var BAND_2 = 1;
        var BAND_3 = 2;

		var gKeyNames = [];
		gKeyNames[BAND_1] = {};
		gKeyNames[BAND_2] = {};
		gKeyNames[BAND_3] = {};
		gKeyNames[BAND_1].wlan_host = [];
		gKeyNames[BAND_2].wlan_host = [];
		gKeyNames[BAND_3].wlan_host = [];

		gKeyNames[BAND_1].wlan_host[FREQ_2G]       = "wlan_host_2g";
		gKeyNames[BAND_2].wlan_host[FREQ_2G]       = "wlan_host_2g";
		gKeyNames[BAND_2].wlan_host[FREQ_5G]       = "wlan_host_5g";
		gKeyNames[BAND_3].wlan_host[FREQ_2G ]      = "wlan_host_2g";
		gKeyNames[BAND_3].wlan_host[FREQ_5G1]      = "wlan_host_5g_1";
		gKeyNames[BAND_3].wlan_host[FREQ_5G4]      = "wlan_host_5g_4";

		switch (slp.bandsProvided - 1) {
            case BAND_1:
                freqArr = [FREQ_2G];
                break;
            case BAND_2:
                freqArr = [FREQ_2G, FREQ_5G];
                break;
            case BAND_3:
                freqArr = [FREQ_2G, FREQ_5G1, FREQ_5G4];
                break;
		}

		function getData() {
			var args = {"wireless":{"name":[]}, "network":{"name":["lan"]}};
			for (var keyname in gKeyNames[slp.bandsProvided - 1]) {
				if (!gKeyNames[slp.bandsProvided - 1].hasOwnProperty(keyname)){
					continue;
				}
				$.each(gKeyNames[slp.bandsProvided - 1][keyname], function(k, v){
					if (null != v)
					{
						args.wireless.name.push(v);
					}
				})
			}

			/* 支持BandSteering */
			if (slp.bandSteeringProvided) {
				args.wireless.name.push("wlan_bs");
			}

			$.query(args, function(data) {
				gLanIP = data.network.lan.ipaddr;
				$.each(gKeyNames[slp.bandsProvided - 1].wlan_host, function(freq, keyname){
					if (null != keyname)
					{
						gWireRepeaterCfg[freq].ssid = data.wireless[keyname].ssid;
						gWireRepeaterCfg[freq].encryption = parseInt(data.wireless[keyname].encryption) ? 1 : 0;
						gWireRepeaterCfg[freq].key = data.wireless[keyname].key;

						id("wirelessName" + bands[freq]).value = gWireRepeaterCfg[freq].ssid;
						id("wirelessPwd" + bands[freq]).value =
							gWireRepeaterCfg[freq].encryption == uciWireless.dynOptValue.encryption.on ?
							gWireRepeaterCfg[freq].key : "";
					}

					if (slp.bandSteeringProvided) {
						gWireRepeaterCfg[FREQ_BS].bs_enable = data.wireless.wlan_bs.bs_enable;
						gWireRepeaterCfg[FREQ_BS].ssid = data.wireless.wlan_bs.ssid;
						gWireRepeaterCfg[FREQ_BS].encryption = parseInt(data.wireless.wlan_bs.encryption) ? 1 : 0;
						gWireRepeaterCfg[FREQ_BS].key = data.wireless.wlan_bs.key;

						id("wirelessNameBS").value = gWireRepeaterCfg[FREQ_BS].ssid;
						id("wirelessPwdBS").value =
							gWireRepeaterCfg[FREQ_BS].encryption == uciWireless.dynOptValue.encryption.on ?
							gWireRepeaterCfg[FREQ_BS].key : "";
					}
				});
			});
		}

		function switchBSHd(state)
		{
			var switchBg = $("#switchBS").children(':first-child');

			if (state)
			{
				switchBg.attr("class", "switchBg");
				$(".openBS").show();
				$(".closeBS").hide();
			}
			else{
				switchBg.attr("class", "switchBgOff");
				$(".openBS").hide();
				$(".closeBS").show();

				if (slp.bandsProvided - 1 == BAND_3)
				{
					$(".input3Band").show();
				}
				else if (slp.bandsProvided - 1 == BAND_2)
				{
					$(".input2Band").show();
				}
			}
		}

        function checkWlanName(val)
        {
            if (val.length == 0)
            {
                return EINVSSIDNULL;
            }

            if (val.replace(/\s/g, "").length == 0)
            {
                return EINVSSIDBLANK;
            }

            return checkWifiName(val, 32, 1) ? ENONE : EINVSSIDLEN;
        }

		function checkWlanNameAndPwd(freq)
		{
			var nameVal = id("wirelessName" + freq).value;
			var pwdVal = id("wirelessPwd" + freq).value;
			var data = {};

			closePhoneNote("wirelessName" + freq, "wzdWirelessNameNote" + freq);
			closePhoneNote("wirelessPwd" + freq, "wzdWirelessPwdNote" + freq);

			if (errHandle(checkWlanName(nameVal), "wirelessName" + freq, "wzdWirelessNameNote" + freq) ||
				errHandle(checkWlanPwd(pwdVal), "wirelessPwd" + freq, "wzdWirelessPwdNote" + freq))
			{
				return false;
			}

			data.ssid = nameVal;
			data.key = pwdVal;
			data.encryption = pwdVal == "" ? 0 : 1;

			if(freq == "BS")
			{
				data["bs_enable"] = "1";
			}

			return data;
		}

        function showPhoneNote(labelForStr, noteIdStr, showStr)
        {
            $('label[for="'+ labelForStr + '"]').css("color", "#FF3D00");
            id(noteIdStr).style.display = "block";
            $("#" + noteIdStr + " span").html(showStr);
        }

        function closePhoneNote(labelForStr, noteIdStr)
        {
            $('label[for="'+ labelForStr + '"]').css("color", "#666666");
            id(noteIdStr).style.display = "none";
        }

		function onSave()
		{
			var checkResult;
            var data = {"wireless":{}};

			/* 检查合法性 */
			if (switchState)
			{
				checkResult = checkWlanNameAndPwd("BS");

				if (false == checkResult)
				{
					return;
				}

				gWireRepeaterCfg[FREQ_BS] = checkResult;
				data.wireless["wlan_bs"] = checkResult;
				gOpenBS = true;
			}
			else
			{
				for (var i = 0; i < freqArr.length; ++i) {
					var freqName = bands[freqArr[i]];

					checkResult = checkWlanNameAndPwd(freqName);
					if (false == checkResult)
					{
						return;
					}

					gWireRepeaterCfg[freqArr[i]] = checkResult;
					data.wireless[gKeyNames[slp.bandsProvided - 1].wlan_host[freqArr[i]]] = checkResult;
                }
				gWireRepeaterCfg[FREQ_BS]["bs_enable"] = "0";
				data.wireless["wlan_bs"] = {"bs_enable":"0"};
				gOpenBS = false;
			}

			gWifiCfgToSave = data;

			var cfg = {};
			cfg.system = {"sys_mode":{"mode": uciSystem.optValue.sysMode.apMode}};
			switch (slp.bandsProvided - 1) {
				case BAND_1:
					cfg.wireless = {"wlan_wds_2g":{"enable":"0"}};
					break;
				case BAND_2:
					cfg.wireless = {"wlan_wds_2g":{"enable":"0"},"wlan_wds_5g":{"enable":"0"}};
					break;
				case BAND_3:
					cfg.wireless = {"wlan_wds_2g":{"enable":"0"},"wlan_wds_5g_1":{"enable":"0"},"wlan_wds_5g_4":{"enable":"0"}};
					break;
			}

			$.modify(cfg, function(result) {
				if (false == errHandle(result[ERR_CODE])) {
					gSysMode = uciSystem.optValue.sysMode.apMode;
					retryCount = 0;
                    showLoading();
					getApStatus();
				}
			});
		}

		function apFailed()
		{
			showPhConfirm("连接失败，请确定是否重试？", function(choose) {
				if (choose) {
                    retryCount = 0;
                    showLoading();
					getApStatus();
				} else {
					if (slp.g11AXSupport["wlan2g"] || slp.g11AXSupport["wlan5g"])
					{
						loadPage("PhoneWizardWirelessAx.htm", "phCon");
					}
					else
					{
						$.modify(gWifiCfgToSave, function() {
							loadPage("PhoneWireRepeaterEnd.htm", "phCon");
						});
					}
				}
			},"重试","下一步");
		}

        function getApStatus()
        {
			clearTimeout(getApStatusHd);
			if (retryCount > 20) {
				closeLoading();
				apFailed();
				return;
			}

            $.query({"wired_extender":{"name":"status"}}, function(resp){
                if (false == errHandle(resp[ERR_CODE]))
                {
                    var ip = resp.wired_extender.status.ip;
					if (ip == "0.0.0.0") {
						retryCount++;
						getApStatusHd = $.setTimeout(getApStatus, 1000);
					} else {
                        closeLoading();
						gLanIP = resp.wired_extender.status.ip;

						if (slp.g11AXSupport["wlan2g"] || slp.g11AXSupport["wlan5g"])
						{
							loadPage("PhoneWizardWirelessAx.htm", "phCon");
						}
						else
						{
							loadPage("PhoneWireRepeaterEnd.htm", "phCon");
						}
					}
				}
				else
				{
                    closeLoading();
                    apFailed();
				}
            });
        }

		function errHandle(errNo, labelFor, noteId)
        {
            switch(errNo)
            {
                case ENONE:
                    return false;
                case EWLANPWDBLANK:
                    return false;
                case EINVSSIDNULL:
                    // 无线名称为空
                    showPhoneNote(labelFor, noteId, errStr.wlanSsidErr);
                    break;
                case EINVSSIDBLANK:
                    // 无线名称全为空格
                    showPhoneNote(labelFor, noteId, errStr.wlanSsidBlank);
                    break;
                case EINVSSIDLEN:
                    // 无线名称长度错误
                    showPhoneNote(labelFor, noteId, errStr.wlanSsidLenErr);
                    break;
                case EINVWLANPWD:
                    // 密码非法字符
                    showPhoneNote(labelFor, noteId, errStr.wlanPwdInvalid);
                    break;
                case EINVPSKLEN:
                    // 密码长度错误
                    showPhoneNote(labelFor, noteId, errStr.wlanPwdLenValid);
                    break;
                default:
                    showPhWzdAlert(errStr.invRequestFail);
                    break;
            }

            return true;
		}

		function togglePwdShow(freq)
		{
			var togglePwdShowId = "#togglePwdShow" + freq;
			$(togglePwdShowId).click(function() {
				$(togglePwdShowId).toggleClass("pwdShowOff pwdShowOn");
				id("wirelessPwd" + freq).type = $(togglePwdShowId).attr("class") == "pwdShowOff"
					? "password" : "text";
			});
		}

		getData();

        id("pre").onclick = function() {
            clearTimeout(getApStatusHd);
            loadPage("PhoneWiredRepeaterWeb.htm","phCon");
        }
		id("next").onclick = function() {
			onSave();
		};

		$("#switchCon").click(function(){
			if(switchState){
				switchState = false;
				$("#switchOff").show();
				$("#switchOn").hide();
			}else{
				switchState = true;
				$("#switchOff").hide();
				$("#switchOn").show();
			}
			switchBSHd(switchState);
		});
		$("#switchCon").click();

		for (var freq in bands)
		{
			if (!bands.hasOwnProperty(freq)){
				continue;
			}
			togglePwdShow(bands[freq]);
		}
	}
	init();
</script>
<style type="text/css">
		p.WDSTitle{
		width:280px;
		margin:16px auto;
		color:#666666;
		font-size:14px;
		text-align:left;
	}
	.phInputUl p{
		color:#666666;
		font-size:14px;
		text-align:left;
	}
	.phInputUl .titleTip{
		font-size:14px;
		font-weight:bold;
		margin-bottom:8px;
	}
	li.phInputLi input{
		box-sizing:border-box;
	}
	.ib{
		display: inline-block;
	}
	#switchBS{
		font-size:14px;
		line-height: 20px;
		float: right;
	}
	.input5G{
		display: none;
	}
	.input5G1{
		display: none;
	}
	.input5G2{
		display: none;
	}
	.bold{
		font-weight:bold;
	}
	ul.switchBSUl{
		margin: 0 auto;
		width: 280px;
		height:46px;
		border-bottom:solid 1px rgba(255, 255, 255, 0.4);
	}
	ul.switchBSUl p.titleBS{
		line-height:42px;
		font-size:14px;
		color:#666666;
		vertical-align: middle;
	}
	ul.switchBSUl div{
		display: inline-block;
		vertical-align:middle;
	}
	#switchCon {
		float:right;
	}
	#switchCon img{
		width: 61px;
		height: 46px;
	}
	p.ctxBS{
		font-size:14px;
		color:#666666;
		margin: 8px auto 40px;
		width: 280px;
		margin-top:8px;
	}
	li.phErrTip span.errDes {
		line-height:16px;
	}
</style>
<h1 class="phoneTitle">无线设置</h1>
<div class="WDSThBlock">
	<ul class="switchBSUl">
		<p class="titleBS ib bold">多频合一</p>
		<div id="switchCon">
			<img id="switchOn" src="../web-static/images/switchOn.png" />
			<img id="switchOff" src="../web-static/images/switchOff.png" />
		</div>
		<p class="phBSTip">2.4G和5G无线网络使用相同的无线名称和密码，在终端连接Wi-Fi时，路由器会根据网络情况自动为终端选择最佳上网频段。</p>
	</ul>
	<p class="ctxBS phBSTip">2.4G和5G无线网络使用相同的无线名称和密码，在终端连接Wi-Fi时，路由器会根据网络情况自动为终端选择最佳上网频段。</p>
	<div class="openBS">
		<ul class="phInputUl">
			<p class="titleTip">无线设置</p>
			<li class="phInputLi">
				<label for="wirelessNameBS">Wi-Fi名称</label>
				<i class="clapboard"></i>
				<input id="wirelessNameBS" maxlength="63" />
			</li>
			<li id="wzdWirelessNameNoteBS" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl">
			<li class="phInputLi">
				<label for="wirelessPwdBS">Wi-Fi密码</label>
				<i class="clapboard"></i>
				<input id="wirelessPwdBS" maxlength="63" type="password" />
				<i id="togglePwdShowBS" class="pwdShowOff"></i>
			</li>
			<li id="wzdWirelessPwdNoteBS" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
	</div>
	<div class="closeBS">
		<ul class="phInputUl input2G">
			<p class="titleTip">2.4G无线设置</p>
			<li class="phInputLi">
				<label for="wirelessName2G">Wi-Fi名称</label>
				<i class="clapboard"></i>
				<input id="wirelessName2G" maxlength="63" />
			</li>
			<li id="wzdWirelessNameNote2G" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl input2G">
			<li class="phInputLi">
				<label for="wirelessPwd2G">Wi-Fi密码</label>
				<i class="clapboard"></i>
				<input id="wirelessPwd2G" maxlength="63" type="password" />
				<i id="togglePwdShow2G" class="pwdShowOff"></i>
			</li>
			<li id="wzdWirelessPwdNote2G" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl input5G input2Band">
			<p class="titleTip">5G无线设置</p>
			<li class="phInputLi">
				<label for="wirelessName5G">Wi-Fi名称</label>
				<i class="clapboard"></i>
				<input id="wirelessName5G" maxlength="63" />
			</li>
			<li id="wzdWirelessNameNote5G" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl input5G input2Band">
			<li class="phInputLi">
				<label for="wirelessPwd5G">Wi-Fi密码</label>
				<i class="clapboard"></i>
				<input id="wirelessPwd5G" maxlength="63" type="password" />
				<i id="togglePwdShow5G" class="pwdShowOff"></i>
			</li>
			<li id="wzdWirelessPwdNote5G" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl input5G1 input3Band">
			<p class="titleTip">5G1无线设置</p>
			<li class="phInputLi">
				<label for="wirelessName5G1">Wi-Fi名称</label>
				<i class="clapboard"></i>
				<input id="wirelessName5G1" maxlength="63" />
			</li>
			<li id="wzdWirelessNameNote5G1" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl input5G1 input3Band">
			<li class="phInputLi">
				<label for="wirelessPwd5G1">Wi-Fi密码</label>
				<i class="clapboard"></i>
				<input id="wirelessPwd5G1" maxlength="63" type="password" />
				<i id="togglePwdShow5G1" class="pwdShowOff"></i>
			</li>
			<li id="wzdWirelessPwdNote5G1" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl input5G2 input3Band">
			<p class="titleTip">5G2无线设置</p>
			<li class="phInputLi">
				<label for="wirelessName5G2">Wi-Fi名称</label>
				<i class="clapboard"></i>
				<input id="wirelessName5G2" maxlength="63" />
			</li>
			<li id="wzdWirelessNameNote5G2" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
		<ul class="phInputUl input5G2 input3Band">
			<li class="phInputLi">
				<label for="wirelessPwd5G2">Wi-Fi密码</label>
				<i class="clapboard"></i>
				<input id="wirelessPwd5G2" maxlength="63" type="password" />
				<i id="togglePwdShow5G2" class="pwdShowOff"></i>

			</li>
			<li id="wzdWirelessPwdNote5G2" class="phErrTip disNone">
				<span class="errDes"></span>
			</li>
		</ul>
	</div>
</div>
<div class="phFunc">
	<label id="pre" class="phTwoBtnL">{%btn.preStep%}</label>
	<label id="next" class="phTwoBtnR">{%btn.nextStep%}</label>
</div>