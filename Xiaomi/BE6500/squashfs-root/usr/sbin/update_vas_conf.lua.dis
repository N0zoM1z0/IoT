local L0, L1, L2, L3, L4
L0 = require
L1 = "xiaoqiang.module.XQVASModule"
L0 = L0(L1)
L1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
function L2(A0)
  local L1, L2, L3, L4, L5
  L1 = string
  L1 = L1.gsub
  L2 = A0
  L3 = "[^"
  L4 = _UPVALUE0_
  L5 = "=]"
  L3 = L3 .. L4 .. L5
  L4 = ""
  L1 = L1(L2, L3, L4)
  A0 = L1
  L2 = A0
  L1 = A0.gsub
  L3 = "."
  function L4(A0)
    local L1, L2, L3, L4, L5, L6, L7, L8, L9
    if A0 == "=" then
      L1 = ""
      return L1
    end
    L1 = ""
    L2 = _UPVALUE0_
    L2 = L2.find
    L2 = L2(L3, L4)
    L2 = L2 - 1
    for L6 = L3, L4, L5 do
      L7 = L1
      L8 = 2 ^ L6
      L8 = L2 % L8
      L9 = L6 - 1
      L9 = 2 ^ L9
      L9 = L2 % L9
      L8 = L8 - L9
      if 0 < L8 then
        L8 = "1"
        if L8 then
          goto lbl_28
        end
      end
      L8 = "0"
      ::lbl_28::
      L1 = L7 .. L8
    end
    return L1
  end
  L1 = L1(L2, L3, L4)
  L2 = L1
  L1 = L1.gsub
  L3 = "%d%d%d?%d?%d?%d?%d?%d?"
  function L4(A0)
    local L1, L2, L3, L4, L5, L6, L7, L8, L9
    L1 = #A0
    if L1 ~= 8 then
      L1 = ""
      return L1
    end
    L1 = 0
    for L5 = L2, L3, L4 do
      L7 = A0
      L6 = A0.sub
      L8 = L5
      L9 = L5
      L6 = L6(L7, L8, L9)
      if L6 == "1" then
        L6 = 8 - L5
        L6 = 2 ^ L6
        if L6 then
          goto lbl_22
        end
      end
      L6 = 0
      ::lbl_22::
      L1 = L1 + L6
    end
    return L2(L3)
  end
  L1 = L1(L2, L3, L4)
  return L1
end
base64_dec = L2
function L2()
  local L0, L1
  L0 = os
  L0 = L0.execute
  L1 = "killall -s 10 noflushd "
  L0(L1)
end
sys_wakeup = L2
function L2(A0)
  local L1, L2, L3, L4, L5
  L1 = require
  L2 = "json"
  L1 = L1(L2)
  if not A0 then
    L2 = os
    L2 = L2.exit
    L3 = 1
    L2(L3)
  else
    L2 = base64_dec
    L3 = A0
    L2 = L2(L3)
    A0 = L2
  end
  L2 = pcall
  L3 = L1.decode
  L4 = A0
  L2, L3 = L2(L3, L4)
  if L2 and L3 then
    L4 = sys_wakeup
    L4()
    L4 = _UPVALUE0_
    L4 = L4.updateVasConf
    L5 = L3
    L4(L5)
    L4 = os
    L4 = L4.exit
    L5 = 0
    L4(L5)
  end
  L4 = os
  L4 = L4.exit
  L5 = 1
  L4(L5)
end
update = L2
function L2()
  local L0, L1, L2, L3, L4
  L0 = require
  L1 = "json"
  L0 = L0(L1)
  L1 = _UPVALUE0_
  L1 = L1.get_vas_info
  L1 = L1()
  L2 = print
  L3 = L0.encode
  L4 = L1
  L3, L4 = L3(L4)
  L2(L3, L4)
  L2 = os
  L2 = L2.exit
  L3 = 0
  L2(L3)
end
get = L2
L2 = arg
L2 = L2[1]
if L2 == "get" then
  L3 = get
  L3()
else
  L3 = update
  L4 = L2
  L3(L4)
end
