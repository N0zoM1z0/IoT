#!/bin/sh
usage(){
    cat << EOF
usage: ethernet led control:
       ethled_on  : light the ethernet's leds
       ethled_off : make all ethernet leds to dark

       ethernet led timer control:
       ethled_timer_on <hour of led_on time> <min of led_on time> <hour of led_off time> <min of led_off time>
       ethled_timer_off

EOF
    exit 255
}

led_on(){
    uci set xiaoqiang.common.ETHLED=1
    uci commit xiaoqiang

    #AR8081
    ssdk_sh debug phy set 24 0x40078078 0x8670 > /dev/null 2>&1
    #MTK7531
    switch reg r 0x7c10 > /dev/null 2>&1
    switch reg r 0x7c14 > /dev/null 2>&1
    switch reg r 0x7c18 > /dev/null 2>&1
    switch reg w 0x7c10 0x11111111 > /dev/null 2>&1
    switch reg w 0x7c14 0x11110110 > /dev/null 2>&1
    switch reg w 0x7c18 0x111 > /dev/null 2>&1

    timer_is_mesh_cap && mesh_cmd sync_lite > /dev/null 2>&1 &

    return
}

led_off(){
    uci set xiaoqiang.common.ETHLED=0
    uci commit xiaoqiang

    #AR8081
    ssdk_sh debug phy set 24 0x40078078 0x8000 > /dev/null 2>&1
    #MTK7531
    switch reg r 0x7c10 > /dev/null 2>&1
    switch reg r 0x7c14 > /dev/null 2>&1
    switch reg r 0x7c18 > /dev/null 2>&1
    switch reg w 0x7c10 0x11011111 > /dev/null 2>&1
    switch reg w 0x7c14 0x10110000 > /dev/null 2>&1
    switch reg w 0x7c18 0x110 > /dev/null 2>&1

    timer_is_mesh_cap && mesh_cmd sync_lite > /dev/null 2>&1 &

    return
}

timer_on(){
    local h_open="$1"
    local m_open="$2"
    local h_close="$3"
    local m_close="$4"
    local format="%s %s * * * %s"
    local script_open
    local script_close

    uci set xiaoqiang.common.ETHLED_TIMER=1
    uci set xiaoqiang.common.ETHLED_TIMER_OPEN="$h_open"":""$m_open"
    uci set xiaoqiang.common.ETHLED_TIMER_CLOSE="$h_close"":""$m_close"
    uci commit xiaoqiang

    grep -v "/usr/sbin/ethled_ctl" /etc/crontabs/root > /etc/crontabs/root.new

    script_open=$(printf "$format" "$m_open" "$h_open" "/usr/sbin/ethled_ctl ethled_on > /dev/null 2>&1")
    echo "$script_open" >> /etc/crontabs/root.new
    script_close=$(printf "$format" "$m_close" "$h_close" "/usr/sbin/ethled_ctl ethled_off > /dev/null 2>&1")
    echo "$script_close" >> /etc/crontabs/root.new

    mv /etc/crontabs/root.new /etc/crontabs/root
    /etc/init.d/cron restart
    return
}

timer_off(){
    uci set xiaoqiang.common.ETHLED_TIMER=0
    uci set xiaoqiang.common.ETHLED_TIMER_OPEN="00:00"
    uci set xiaoqiang.common.ETHLED_TIMER_CLOSE="00:00"
    uci commit xiaoqiang

    grep -v "/usr/sbin/ethled_ctl" /etc/crontabs/root > /etc/crontabs/root.new
    mv /etc/crontabs/root.new /etc/crontabs/root
    /etc/init.d/cron restart
    return
}

timer_is_mesh_cap(){
    local netmode
    local capmode

    netmode=$(uci -q get xiaoqiang.common.NETMODE)
    [ -z "$netmode" ] && return 1

    [ "${netmode:0:7}" = "whc_cap" ] && return 0
    if [ "${netmode:0:9}" = "lanapmode" ]; then
        capmode=$(uci -q get xiaoqiang.common.CAP_MODE)
        [ -n "$capmode" -a "$capmode" = "ap" ] && return 0
    fi

    return 1
}

# return local led status
#     true : light
#     false: dark
timer_get_led_status(){
    local local_status

    local_status=$(uci -q get xiaoqiang.common.ETHLED)
    [ -n "$local_status" -a "$local_status" = "0" ] && return 1
    return 0
}

run_with_lock()
{
  {
       flock -x -w 60 1000
       [ $? -eq "1" ] && { log "$$, ===== lock failed. exit 1" ; exit 1 ; }
       $@
       flock -u 1000
   } 1000<>/var/log/led_crond_lock.lock
}

#---------------- main ----------------#
NUM_PARAMS="$#"
case "$1" in
    "ethled_on" )
        [ "$NUM_PARAMS" != "1" ] && usage
        led_on
        ;;

    "ethled_off" )
        [ "$NUM_PARAMS" != "1" ] && usage
        led_off
        ;;

    "ethled_timer_on" )
        [ "$NUM_PARAMS" != "5" ] && usage
        run_with_lock timer_on "$2" "$3" "$4" "$5"
        ;;

    "ethled_timer_off" )
        [ "$NUM_PARAMS" != "1" ] && usage
        run_with_lock timer_off
        ;;

    * )
        usage
        ;;
esac
return

