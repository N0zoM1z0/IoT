local L0, L1, L2, L3, L4, L5, L6
L0 = module
L1 = "xiaoqiang.module.XQWifiShare"
L2 = package
L2 = L2.seeall
L0(L1, L2)
L0 = require
L1 = "xiaoqiang.common.XQFunction"
L0 = L0(L1)
L1 = require
L2 = "xiaoqiang.common.XQConfigs"
L1 = L1(L2)
L2 = require
L3 = "xiaoqiang.util.XQSysUtil"
L2 = L2(L3)
L3 = require
L4 = "luci.util"
L3 = L3(L4)
L4 = require
L5 = "xiaoqiang.XQLog"
L4 = L4(L5)
L5 = string
L5 = L5.upper
L6 = L2.getHardware
L6 = L6()
L5 = L5(L6)
function L6(A0)
  local L1, L2, L3, L4, L5, L6, L7
  L1 = 1
  if A0 then
    if L2 == "table" then
      goto lbl_11
    end
  end
  do return L2 end
  ::lbl_11::
  if L2 then
    if L2 then
      if L2 then
        goto lbl_22
      end
    end
  end
  do return L2 end
  ::lbl_22::
  if L2 == 1 then
    if L2 == 1 then
      goto lbl_30
    end
  end
  do return L2 end
  ::lbl_30::
  for L5, L6 in L2, L3, L4 do
    if L6 ~= "user" then
      L7 = 1
      return L7
    end
  end
  for L5, L6 in L2, L3, L4 do
    if L6 == "wifirent_wechat_pay" then
      L7 = 0
      return L7
    end
  end
  return L2
end
wifi_share_needset = L6
function L6()
  local L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10
  L0 = require
  L1 = "luci.model.uci"
  L0 = L0(L1)
  L0 = L0.cursor
  L0 = L0()
  L1 = require
  L2 = "xiaoqiang.util.XQWifiUtil"
  L1 = L1(L2)
  L2 = {}
  L2.guest = 0
  L2.share = 0
  L3 = {}
  L2.sns = L3
  L3 = L1.getGuestWifi
  L4 = 1
  L3 = L3(L4)
  L4 = tonumber
  L5 = L3.status
  L4 = L4(L5)
  L2.guest = L4
  L4 = {}
  L5 = L3.ssid
  L4.ssid = L5
  L5 = L3.encryption
  L4.encryption = L5
  L5 = L3.password
  L4.password = L5
  L2.data = L4
  L5 = L0
  L4 = L0.get
  L6 = "wifishare"
  L7 = "global"
  L8 = "disabled"
  L4 = L4(L5, L6, L7, L8)
  L4 = L4 or L4
  if L4 then
    L5 = tonumber
    L6 = L4
    L5 = L5(L6)
    if L5 == 0 then
      L5 = 1
      if L5 then
        goto lbl_48
      end
    end
    L5 = 0
    ::lbl_48::
    L2.share = L5
  end
  L6 = L0
  L5 = L0.get
  L7 = "wifishare"
  L8 = "global"
  L9 = "mark"
  L5 = L5(L6, L7, L8, L9)
  if not L5 then
    L6 = L2.guest
    if L6 == 0 then
      L2.share = 1
    end
  end
  L7 = L0
  L6 = L0.get_list
  L8 = "wifishare"
  L9 = "global"
  L10 = "active"
  L6 = L6(L7, L8, L9, L10)
  L6 = L6 or L6
  L2.active = L6
  L7 = L0
  L6 = L0.get_list
  L8 = "wifishare"
  L9 = "global"
  L10 = "sns"
  L6 = L6(L7, L8, L9, L10)
  L6 = L6 or L6
  L2.sns = L6
  L6 = wifi_share_needset
  L7 = L2
  L6 = L6(L7)
  L2.need = L6
  return L2
end
wifi_share_info = L6
function L6()
  local L0, L1, L2
  L0 = {}
  L0.need = 1
  L1 = wifi_share_info
  L1 = L1()
  info = L1
  L1 = wifi_share_needset
  L2 = info
  L1 = L1(L2)
  L0.need = L1
  return L0
end
wifi_share_info_web = L6
function L6(A0)
  local L1, L2, L3, L4, L5, L6, L7
  L1 = require
  L2 = "luci.model.uci"
  L1 = L1(L2)
  L1 = L1.cursor
  L1 = L1()
  L3 = L1
  L2 = L1.set
  L4 = "wifishare"
  L5 = "global"
  L6 = "disabled"
  if A0 == 1 then
    L7 = "0"
    if L7 then
      goto lbl_16
    end
  end
  L7 = "1"
  ::lbl_16::
  L2(L3, L4, L5, L6, L7)
  L3 = L1
  L2 = L1.commit
  L4 = "wifishare"
  L2(L3, L4)
  if A0 == 1 then
    L2 = _UPVALUE0_
    L2 = L2.forkExec
    L3 = "sleep 4; /usr/sbin/wifishare.sh on"
    L2(L3)
  else
    L2 = _UPVALUE0_
    L2 = L2.forkExec
    L3 = "sleep 4; /usr/sbin/wifishare.sh off"
    L2(L3)
  end
end
wifi_share_switch = L6
function L6(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17
  if A0 then
    L1 = type
    L2 = A0
    L1 = L1(L2)
    if L1 == "table" then
      goto lbl_10
    end
  end
  L1 = false
  do return L1 end
  ::lbl_10::
  L1 = require
  L2 = "luci.model.uci"
  L1 = L1(L2)
  L1 = L1.cursor
  L1 = L1()
  L2 = require
  L3 = "xiaoqiang.module.XQGuestWifi"
  L2 = L2(L3)
  L3 = A0.guest
  if L3 then
    L3 = A0.share
    if L3 then
      L3 = "/usr/sbin/wifishare.sh off; /usr/sbin/wifishare.sh on"
      L4 = A0.guest
      if L4 == 0 then
        L3 = "/usr/sbin/wifishare.sh off"
      end
      L4 = _UPVALUE0_
      L4 = L4.log
      L4(L5, L6)
      L4 = _UPVALUE0_
      L4 = L4.log
      L4(L5, L6)
      L4 = "XIAOMI_ROUTER_GUEST"
      if L5 == 1 then
        if L5 == 1 then
          if L5 then
            if L5 == "user" then
              L4 = "XIAOMI_ROUTER_GUEST_WX"
          end
          elseif L5 then
            if L5 == "business" then
              if L5 then
                if L5 == "table" then
                  if 0 < L5 then
                    for L8, L9 in L5, L6, L7 do
                      if L9 == "dianping" then
                        L4 = "XIAOMI_ROUTER_GUEST_DP"
                      elseif L9 == "meituan" then
                        L4 = "XIAOMI_ROUTER_GUEST_MT"
                      elseif L9 == "nuomi" then
                        L4 = "XIAOMI_ROUTER_GUEST_NM"
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
      if L5 == 0 or L4 == "XIAOMI_ROUTER_GUEST" then
      elseif L4 == "XIAOMI_ROUTER_GUEST_WX" then
        L3 = L5 .. L6
      else
        L3 = L5 .. L6
      end
      if L6 then
        if L6 == "table" then
          if 0 < L6 then
            L8 = "wifishare"
            L9 = "global"
            L10 = "sns"
            L11 = A0.sns
            L6(L7, L8, L9, L10, L11)
          end
        end
      end
      if L6 then
        if L6 == "table" then
          if 0 < L6 then
            L8 = "wifishare"
            L9 = "global"
            L10 = "business"
            L11 = A0.business
            L6(L7, L8, L9, L10, L11)
          end
        end
      end
      if L6 then
        L8 = "wifishare"
        L9 = "global"
        L10 = "active"
        L11 = A0.type
        L6(L7, L8, L9, L10, L11)
      end
      L8 = "wifishare"
      L9 = "global"
      L10 = "mark"
      L11 = "1"
      L6(L7, L8, L9, L10, L11)
      L8 = "wifishare"
      L9 = "global"
      L10 = "disabled"
      L11 = A0.share
      if L11 == 1 then
        L11 = "0"
        if L11 then
          goto lbl_173
        end
      end
      L11 = "1"
      ::lbl_173::
      L6(L7, L8, L9, L10, L11)
      L8 = "wifishare"
      L6(L7, L8)
      L8 = nil
      L9 = A0.data
      if L9 then
        L9 = type
        L10 = A0.data
        L9 = L9(L10)
        if L9 == "table" then
          L9 = A0.data
          L9 = A0.data
          L9 = A0.data
          L8 = L9.password
        end
      end
      L9 = _UPVALUE0_
      L9 = L9.log
      L10 = 6
      L11 = "ssid "
      L12 = L6
      L11 = L11 .. L12
      L9(L10, L11)
      L9 = _UPVALUE0_
      L9 = L9.log
      L10 = 6
      L11 = "encryption "
      L12 = L7
      L11 = L11 .. L12
      L9(L10, L11)
      L9 = _UPVALUE0_
      L9 = L9.log
      L10 = 6
      L11 = "key "
      L12 = L8
      L11 = L11 .. L12
      L9(L10, L11)
      L9 = A0.share
      if L9 == 0 then
        L9 = A0.guest
        if L9 == 1 and L7 == "none" then
          L8 = "12345678"
          L9 = _UPVALUE0_
          L9 = L9.log
          L10 = 6
          L11 = "set guest not share, key = "
          L12 = L8
          L11 = L11 .. L12
          L9(L10, L11)
        end
      end
      L9 = A0.share
      if L9 == 1 then
        L9 = A0.guest
        if L9 == 1 then
          L8 = nil
          L9 = _UPVALUE0_
          L9 = L9.log
          L10 = 6
          L11 = "set guest and share, key = nil"
          L9(L10, L11)
        end
      end
      L9 = A0.share
      if L9 == 1 then
        L9 = A0.guest
        if L9 == 0 then
          L8 = nil
          L9 = _UPVALUE0_
          L9 = L9.log
          L10 = 6
          L11 = "off guest and share, key = nil"
          L9(L10, L11)
        end
      end
      L9 = A0.share
      if L9 == 1 then
      end
      L9 = L2.setGuestWifi
      L10 = 1
      L11 = L6
      L12 = L7
      L13 = L8
      L14 = 1
      L15 = A0.guest
      L16 = L4
      L17 = L5
      L9(L10, L11, L12, L13, L14, L15, L16, L17)
    end
  end
  L3 = true
  return L3
end
set_wifi_share = L6
function L6(A0, A1, A2, A3, A4, A5)
  local L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17
  L6 = require
  L7 = "luci.model.uci"
  L6 = L6(L7)
  L6 = L6.cursor
  L6 = L6()
  L7 = _UPVALUE0_
  L7 = L7.isStrNil
  L8 = A0
  L7 = L7(L8)
  if L7 then
    L7 = false
    return L7
  end
  L7 = _UPVALUE0_
  L7 = L7.macFormat
  L8 = A0
  L7 = L7(L8)
  L9 = L7
  L8 = L7.gsub
  L10 = ":"
  L11 = ""
  L8 = L8(L9, L10, L11)
  L10 = L6
  L9 = L6.get_all
  L11 = "wifishare"
  L12 = L8
  L9 = L9(L10, L11, L12)
  if L9 then
    L9.mac = L7
    L10 = _UPVALUE0_
    L10 = L10.isStrNil
    L11 = A1
    L10 = L10(L11)
    if not L10 then
      L9.sns = A1
    end
    L10 = _UPVALUE0_
    L10 = L10.isStrNil
    L11 = A3
    L10 = L10(L11)
    if not L10 then
      L9.guest_user_id = A3
    end
    L10 = _UPVALUE0_
    L10 = L10.isStrNil
    L11 = A5
    L10 = L10(L11)
    if not L10 then
      L9.extra_payload = A5
    end
    if A4 then
      if A4 == 0 then
        L9.disabled = "1"
      elseif A4 == 1 then
        L9.disabled = "0"
      end
    end
  else
    L10 = _UPVALUE0_
    L10 = L10.isStrNil
    L11 = A1
    L10 = L10(L11)
    if not L10 then
      L10 = _UPVALUE0_
      L10 = L10.isStrNil
      L11 = A3
      L10 = L10(L11)
      if not L10 and A4 then
        goto lbl_76
      end
    end
    L10 = false
    do return L10 end
    ::lbl_76::
    L10 = {}
    L10.mac = L7
    L10.state = "auth"
    L10.sns = A1
    L10.guest_user_id = A3
    L10.extra_payload = A5
    if A4 == 1 then
      L11 = "0"
      if L11 then
        goto lbl_88
      end
    end
    L11 = "1"
    ::lbl_88::
    L10.disabled = L11
    L9 = L10
  end
  L11 = L6
  L10 = L6.section
  L12 = "wifishare"
  L13 = "device"
  L14 = L8
  L15 = L9
  L10(L11, L12, L13, L14, L15)
  L11 = L6
  L10 = L6.commit
  L12 = "wifishare"
  L10(L11, L12)
  if A4 then
    if A4 == 0 then
      if A1 ~= "direct_request" then
        L10 = os
        L10 = L10.execute
        L11 = "/usr/sbin/wifishare.sh deny '"
        L12 = L7
        L13 = "'"
        L11 = L11 .. L12 .. L13
        L10(L11)
      end
    elseif A4 == 1 then
      L10 = _UPVALUE0_
      L10 = L10.forkExec
      L11 = "/usr/sbin/wifishare.sh allow '"
      L12 = L7
      L13 = "' '"
      L14 = A1
      L15 = "' '"
      L16 = A2
      L17 = "'"
      L11 = L11 .. L12 .. L13 .. L14 .. L15 .. L16 .. L17
      L10(L11)
    end
  end
  L10 = true
  return L10
end
wifi_access = L6
function L6(A0)
  local L1, L2
  L1 = os
  L1 = L1.execute
  L2 = "/usr/sbin/wifishare.sh clean"
  L1(L2)
end
wifi_share_clearall = L6
function L6(A0)
  local L1, L2, L3, L4, L5, L6, L7
  L1 = require
  L2 = "luci.model.uci"
  L1 = L1(L2)
  L1 = L1.cursor
  L1 = L1()
  L2 = {}
  L3 = _UPVALUE0_
  L3 = L3.isStrNil
  L4 = A0
  L3 = L3(L4)
  if L3 then
    return L2
  end
  L4 = L1
  L3 = L1.foreach
  L5 = "wifishare"
  L6 = "device"
  function L7(A0)
    local L1, L2, L3
    L1 = A0.sns
    if L1 then
      L1 = A0.sns
      L2 = _UPVALUE0_
      if L1 == L2 then
        L1 = A0.disabled
        if L1 then
          L1 = tonumber
          L2 = A0.disabled
          L1 = L1(L2)
          if L1 ~= 0 then
            goto lbl_21
          end
        end
        L1 = table
        L1 = L1.insert
        L2 = _UPVALUE1_
        L3 = A0.guest_user_id
        L1(L2, L3)
      end
    end
    ::lbl_21::
  end
  L3(L4, L5, L6, L7)
  return L2
end
sns_list = L6
function L6(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18
  L2 = require
  L3 = "luci.model.uci"
  L2 = L2(L3)
  L2 = L2.cursor
  L2 = L2()
  L3 = true
  L5 = A0
  L4 = A0.gsub
  L6 = ":"
  L7 = ""
  L4 = L4(L5, L6, L7)
  L5 = "_RECORD"
  L6 = A1
  L4 = L4 .. L5 .. L6
  L6 = L2
  L5 = L2.get_all
  L7 = "wifishare"
  L8 = L4
  L5 = L5(L6, L7, L8)
  L6 = tonumber
  L7 = os
  L7 = L7.time
  L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18 = L7()
  L6 = L6(L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18)
  L7 = 90
  L8 = 3
  L9 = 1800
  L10 = {}
  L11 = 1800
  L12 = 86400
  L13 = 3600
  L10[1] = L11
  L10[2] = L12
  L10[3] = L13
  L11 = {}
  L12 = 3
  L13 = 3
  L14 = 3
  L11[1] = L12
  L11[2] = L13
  L11[3] = L14
  L12 = {}
  L13 = 90
  L14 = 600
  L15 = 180
  L12[1] = L13
  L12[2] = L14
  L12[3] = L15
  if A1 < 0 or 3 < A1 then
    L3 = false
    return L3
  end
  L7 = L10[A1]
  L8 = L11[A1]
  L9 = L12[A1]
  if L5 then
    L13 = tonumber
    L14 = L5.timestamp
    L13 = L13(L14)
    L13 = L6 - L13
    if L7 <= L13 or L13 < 0 then
      L5.timestamp = L6
      L5.count = 1
    else
      L14 = tonumber
      L15 = L5.count
      L14 = L14(L15)
      L14 = L14 + 1
      if L8 < L14 then
        L15 = tonumber
        L16 = L5.count
        L15 = L15(L16)
        if L8 >= L15 then
          L5.timestamp = L6
        end
        L3 = false
      end
      L5.count = L14
    end
  else
    L13 = {}
    L13.mac = A0
    L14 = os
    L14 = L14.time
    L14 = L14()
    L13.timestamp = L14
    L13.count = 1
    L5 = L13
  end
  L14 = L2
  L13 = L2.section
  L15 = "wifishare"
  L16 = "record"
  L17 = L4
  L18 = L5
  L13(L14, L15, L16, L17, L18)
  L14 = L2
  L13 = L2.commit
  L15 = "wifishare"
  L13(L14, L15)
  if L3 then
    L13 = _UPVALUE0_
    L13 = L13.forkExec
    L14 = "/usr/sbin/wifishare.sh prepare "
    L15 = A0
    L16 = " "
    L17 = L9
    L14 = L14 .. L15 .. L16 .. L17
    L13(L14)
  end
  return L3
end
wifi_share_prepare = L6
function L6(A0)
  local L1, L2, L3, L4
  L1 = io
  L1 = L1.popen
  L2 = "/usr/sbin/wifishare.sh pstatus "
  L3 = A0
  L2 = L2 .. L3
  L1 = L1(L2)
  L3 = L1
  L2 = L1.read
  L4 = "*l"
  return L2(L3, L4)
end
wifi_share_prepare_status = L6
function L6()
  local L0, L1, L2, L3, L4
  L0 = require
  L1 = "luci.model.uci"
  L0 = L0(L1)
  L0 = L0.cursor
  L0 = L0()
  L2 = L0
  L1 = L0.get_all
  L3 = "wifishare"
  L4 = "blacklist"
  L1 = L1(L2, L3, L4)
  L2 = {}
  if L1 then
    L3 = L1.mac
    if L3 then
      L3 = type
      L4 = L1.mac
      L3 = L3(L4)
      if L3 == "table" then
        L2 = L1.mac
      end
    end
  end
  return L2
end
wifi_share_blacklist = L6
function L6(A0, A1, A2)
  local L3, L4, L5, L6, L7, L8, L9, L10, L11, L12
  if not A0 and not A1 then
    L3 = nil
    return L3
  end
  if A2 == "+" then
    if A0 then
      if not A1 then
        return A0
      end
      L3 = {}
      for L7, L8 in L4, L5, L6 do
        L3[L8] = true
      end
      for L7, L8 in L4, L5, L6 do
        L9 = L3[L8]
        if not L9 then
          L9 = table
          L9 = L9.insert
          L10 = A0
          L11 = L8
          L9(L10, L11)
        end
      end
      return A0
    elseif not A1 then
      L3 = nil
      return L3
    else
      return A1
    end
  elseif A2 == "-" and A0 then
    if not A1 then
      return A0
    end
    L3 = {}
    for L8, L9 in L5, L6, L7 do
      L4[L9] = true
    end
    for L8, L9 in L5, L6, L7 do
      L10 = L4[L9]
      if not L10 then
        L10 = table
        L10 = L10.insert
        L11 = L3
        L12 = L9
        L10(L11, L12)
      end
    end
    return L3
  end
  L3 = nil
  return L3
end
merge = L6
function L6(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8, L9, L10, L11
  L2 = require
  L3 = "luci.model.uci"
  L2 = L2(L3)
  L2 = L2.cursor
  L2 = L2()
  L4 = L2
  L3 = L2.get_all
  L5 = "wifishare"
  L6 = "blacklist"
  L3 = L3(L4, L5, L6)
  L4 = nil
  if L3 then
    L4 = L3.mac
  end
  L5 = merge
  L6 = L4
  L7 = A0
  L8 = A1
  L5 = L5(L6, L7, L8)
  if L3 then
    if L5 then
      L6 = #L5
      if 0 < L6 then
        L3.mac = L5
        L7 = L2
        L6 = L2.section
        L8 = "wifishare"
        L9 = "block"
        L10 = "blacklist"
        L11 = L3
        L6(L7, L8, L9, L10, L11)
    end
    else
      L7 = L2
      L6 = L2.delete
      L8 = "wifishare"
      L9 = "blacklist"
      L10 = "mac"
      L6(L7, L8, L9, L10)
    end
    L7 = L2
    L6 = L2.commit
    L8 = "wifishare"
    L6(L7, L8)
  elseif L5 then
    L6 = #L5
    if 0 < L6 then
      L7 = L2
      L6 = L2.section
      L8 = "wifishare"
      L9 = "block"
      L10 = "blacklist"
      L11 = {}
      L11.mac = L5
      L6(L7, L8, L9, L10, L11)
      L7 = L2
      L6 = L2.commit
      L8 = "wifishare"
      L6(L7, L8)
    end
  end
  L6 = _UPVALUE0_
  L7 = L6
  L6 = L6.match
  L8 = "^R1C"
  L6 = L6(L7, L8)
  if L6 then
    L6 = _UPVALUE1_
    L6 = L6.forkExec
    L7 = "sleep 2; /usr/sbin/wifishare.sh block_apply"
    L6(L7)
  else
    L6 = os
    L6 = L6.execute
    L7 = "/usr/sbin/wifishare.sh block_apply"
    L6(L7)
  end
end
wifi_share_blacklist_edit = L6
function L6(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11
  L1 = 0
  if not A0 then
    return L1
  end
  L2 = require
  L3 = "luci.model.uci"
  L2 = L2(L3)
  L2 = L2.cursor
  L2 = L2()
  L4 = A0
  L3 = A0.gsub
  L5 = ":"
  L3 = L3(L4, L5, L6)
  L5 = L2
  L4 = L2.get_all
  L4 = L4(L5, L6, L7)
  if L4 then
    L5 = L4.sns
    if L5 then
      L5 = L4.sns
      if L5 == "direct_request" then
        L5 = L4.disabled
        if L5 then
          L5 = tonumber
          L5 = L5(L6)
          if L5 == 1 then
            L1 = 2
        end
        else
          L1 = 1
        end
      end
    end
  else
    L5 = L2.get_list
    L9 = "mac"
    L5 = L5(L6, L7, L8, L9)
    if L5 then
      if L6 == "table" then
        for L9, L10 in L6, L7, L8 do
          if A0 == L10 then
            L1 = 2
            break
          end
        end
      end
    end
  end
  return L1
end
authorization_status = L6
function L6(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8
  L1 = require
  L2 = "luci.model.uci"
  L1 = L1(L2)
  L1 = L1.cursor
  L1 = L1()
  if not A0 then
    L2 = false
    return L2
  end
  L3 = A0
  L2 = A0.gsub
  L4 = ":"
  L5 = ""
  L2 = L2(L3, L4, L5)
  L4 = L1
  L3 = L1.get_all
  L5 = "wifishare"
  L6 = L2
  L3 = L3(L4, L5, L6)
  if L3 then
    L4 = L3.datestop
    if L4 then
      L4 = tostring
      L5 = os
      L5 = L5.date
      L6 = "%Y-%m-%d"
      L5, L6, L7, L8 = L5(L6)
      L4 = L4(L5, L6, L7, L8)
      L5 = "T"
      L6 = tostring
      L7 = os
      L7 = L7.date
      L8 = "%X"
      L7, L8 = L7(L8)
      L6 = L6(L7, L8)
      L4 = L4 .. L5 .. L6
      L5 = L3.datestop
      if L4 <= L5 then
        L5 = true
        return L5
      else
        L5 = false
        return L5
      end
    else
      L4 = true
      return L4
    end
  else
    L4 = false
    return L4
  end
end
check_repeat_request = L6
