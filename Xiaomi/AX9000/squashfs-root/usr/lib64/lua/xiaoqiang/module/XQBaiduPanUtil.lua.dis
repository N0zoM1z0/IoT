local L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14
L0 = module
L1 = "xiaoqiang.module.XQBaiduPanUtil"
L2 = package
L2 = L2.seeall
L0(L1, L2)
L0 = require
L1 = "luci.http"
L0 = L0(L1)
L1 = require
L2 = "xiaoqiang.XQLog"
L1 = L1(L2)
L2 = require
L3 = "xiaoqiang.common.XQFunction"
L2 = L2(L3)
L3 = require
L4 = "xiaoqiang.util.XQCryptoUtil"
L3 = L3(L4)
L4 = require
L5 = "luci.model.uci"
L4 = L4(L5)
L4 = L4.cursor
L4 = L4()
L5 = require
L6 = "nixio.fs"
L5 = L5(L6)
L6 = require
L7 = "json"
L6 = L6(L7)
L7 = require
L8 = "luci.util"
L7 = L7(L8)
L8 = nil
L9 = 6
L10 = 100
L11 = {}
L11.NO_ERRNO = 1600
L11.ERROR_NOW_RUNNING = 1601
L11.ERROR_FILE_NO_EXIST = 1604
L11.ERROR_UPLOADLIST_FULL = 1605
L11.ERROR_DOWNLOADLIST_FULL = 1606
L11.ERROR_INTERNAL = 1660
L11.ERROR_PEER_INFO = 1661
L11.ERROR_CONFIG_TRANS = 1662
L11.ERROR_INVALID_MODE = 1663
L11.ERROR_INVALID_SIZE = 1664
L11.ERROR_INVALID_LENGTH = 1665
L11.ERROR_INVALID_PARAMETER = 1666
L11.ERROR_INVALID_DISK = 1667
L11.ERROR_PAUSE = 1668
L11.ERROR_UBUS_CALL_FAILED = 1669
L11.ERROR_DIR_OR_FILE_NAME_EXCEPT = 1670
BDPAN_ERROR_CODE = L11
function L11()
  local L0, L1
  L0 = os
  L0 = L0.execute
  L1 = "lock /var/run/baidupan.lock"
  L0(L1)
end
lock = L11
function L11()
  local L0, L1
  L0 = os
  L0 = L0.execute
  L1 = "lock -u /var/run/baidupan.lock"
  L0(L1)
end
unlock = L11
function L11(A0)
  local L1, L2, L3, L4, L5, L6
  L2 = A0
  L1 = A0.seek
  L1 = L1(L2)
  L3 = A0
  L2 = A0.seek
  L4 = "end"
  L2 = L2(L3, L4)
  L4 = A0
  L3 = A0.seek
  L5 = "set"
  L6 = L1
  L3(L4, L5, L6)
  return L2
end
function L12(A0, A1)
  local L2, L3, L4, L5, L6
  L2 = "w+b"
  L3 = io
  L3 = L3.open
  L4 = A0
  L5 = L2
  L3 = L3(L4, L5)
  if L3 then
    L5 = L3
    L4 = L3.write
    L6 = A1
    L4 = L4(L5, L6)
    if L4 == nil then
      L4 = false
      return L4
    end
    L4 = io
    L4 = L4.close
    L5 = L3
    L4(L5)
    L4 = true
    return L4
  else
    L4 = false
    return L4
  end
end
function L13(A0)
  local L1, L2, L3
  L1 = _UPVALUE0_
  L1 = L1.stat
  L2 = A0
  L3 = "type"
  L1 = L1(L2, L3)
  L1 = L1 == "dir"
  return L1
end
function L14(A0)
  local L1, L2, L3
  L1 = io
  L1 = L1.open
  L2 = A0
  L3 = "r"
  L1 = L1(L2, L3)
  if not L1 then
    L2 = false
    return L2
  end
  L3 = L1
  L2 = L1.close
  L2(L3)
  L2 = true
  return L2
end
_file_exists = L14
function L14(A0)
  local L1, L2, L3, L4
  if A0 then
    L1 = string
    L1 = L1.gsub
    L2 = A0
    L3 = "\r?\n"
    L4 = "\r\n"
    L1 = L1(L2, L3, L4)
    A0 = L1
    L1 = string
    L1 = L1.gsub
    L2 = A0
    L3 = "([^%w%-%.%_%~ ])"
    function L4(A0)
      local L1, L2, L3, L4
      L1 = string
      L1 = L1.format
      L2 = "%%%02X"
      L3 = string
      L3 = L3.byte
      L4 = A0
      L3, L4 = L3(L4)
      return L1(L2, L3, L4)
    end
    L1 = L1(L2, L3, L4)
    A0 = L1
    L1 = string
    L1 = L1.gsub
    L2 = A0
    L3 = " "
    L4 = "+"
    L1 = L1(L2, L3, L4)
    A0 = L1
  end
  return A0
end
xqurlencode = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10
  L1 = 3
  L2 = nil
  for L6 = L3, L4, L5 do
    L7 = luci
    L7 = L7.util
    L7 = L7.exec
    L8 = A0
    L7 = L7(L8)
    L2 = L7
    if L2 == nil or L2 == "" then
      L7 = _UPVALUE0_
      L7 = L7.log
      L8 = _UPVALUE1_
      L9 = "test execUrl loop: "
      L10 = L6
      L7(L8, L9, L10)
      L7 = os
      L7 = L7.execute
      L8 = "sleep 1"
      L7(L8)
    else
      break
    end
  end
  return L2
end
execUrl = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13
  L2 = 0
  L3 = 0
  L4 = io
  L4 = L4.open
  L5 = A0
  L6 = "rb"
  L4 = L4(L5, L6)
  if not L4 then
    L5 = _UPVALUE0_
    L5 = L5.log
    L6 = _UPVALUE1_
    L7 = "file open failed: "
    L8 = A0
    L7 = L7 .. L8
    L5(L6, L7)
    L5 = BDPAN_ERROR_CODE
    L5 = L5.ERROR_FILE_NO_EXIST
    return L5
  end
  L5 = _UPVALUE2_
  L6 = L4
  L5 = L5(L6)
  if A1 == "0" then
    L3 = 4294967296
  elseif A1 == "1" then
    L3 = 10737418240
  elseif A1 == "2" then
    L3 = 21474836480
  end
  if L5 > L3 or L5 <= 0 then
    L6 = BDPAN_ERROR_CODE
    L2 = L6.ERROR_INVALID_SIZE
  end
  L6 = _UPVALUE0_
  L6 = L6.log
  L7 = _UPVALUE1_
  L8 = "current size: "
  L9 = L5
  L10 = " max_size: "
  L11 = L3
  L12 = " res: "
  L13 = L2
  L8 = L8 .. L9 .. L10 .. L11 .. L12 .. L13
  L6(L7, L8)
  return L2
end
userFileSize = L14
function L14(A0)
  local L1, L2, L3, L4, L5
  L2 = A0
  L1 = A0.gsub
  L3 = "%s+"
  L4 = ""
  L1 = L1(L2, L3, L4)
  L2 = string
  L2 = L2.gsub
  L3 = L1
  L4 = "%s+"
  L5 = ""
  L2 = L2(L3, L4, L5)
  L1 = L2
  return L1
end
formatFileName = L14
function L14(A0)
  local L1, L2, L3, L4, L5
  L1 = _UPVALUE0_
  L1 = L1.log
  L2 = _UPVALUE1_
  L3 = "BAIDUPAN getFilename url: "
  L4 = A0
  L3 = L3 .. L4
  L1(L2, L3)
  L2 = A0
  L1 = A0.match
  L3 = "([^/]+)$"
  L1 = L1(L2, L3)
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = _UPVALUE1_
  L4 = "BAIDUPAN getFilename filename: "
  L5 = L1
  L4 = L4 .. L5
  L2(L3, L4)
  L2 = formatFileName
  L3 = L1
  L2 = L2(L3)
  L1 = L2
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = _UPVALUE1_
  L4 = "BAIDUPAN getFilename format filename: "
  L5 = L1
  L4 = L4 .. L5
  L2(L3, L4)
  return L1
end
getFileName = L14
function L14(A0)
  local L1, L2, L3, L4
  L1 = string
  L1 = L1.gsub
  L2 = A0
  L3 = "[^\128-\193]"
  L4 = ""
  L1, L2 = L1(L2, L3, L4)
  if 32 < L2 then
    L3 = BDPAN_ERROR_CODE
    L3 = L3.ERROR_INVALID_LENGTH
    return L3
  end
end
checkFileName = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6
  L1 = io
  L1 = L1.open
  L2 = A0
  L3 = "rb"
  L1 = L1(L2, L3)
  if L1 then
    L3 = L1
    L2 = L1.read
    L4 = "*a"
    L2 = L2(L3, L4)
    L4 = L1
    L3 = L1.close
    L3(L4)
    L3 = string
    L3 = L3.sub
    L4 = L2
    L5 = 1
    L6 = -2
    L3 = L3(L4, L5, L6)
    L2 = L3
    return L2
  else
    L2 = "0"
    return L2
  end
end
getFilePauseStat = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9
  L1 = "cat /etc/config/baidupan | grep "
  L2 = A0
  L3 = " | wc -l"
  L1 = L1 .. L2 .. L3
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = _UPVALUE1_
  L4 = "BAIDUPAN checkTransportListCount cmd: "
  L5 = L1
  L4 = L4 .. L5
  L2(L3, L4)
  L2 = luci
  L2 = L2.util
  L2 = L2.exec
  L3 = L1
  L2 = L2(L3)
  L4 = L2
  L3 = L2.sub
  L5 = 1
  L6 = #L2
  L6 = L6 - 1
  L3 = L3(L4, L5, L6)
  L2 = L3
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN checkTransportListCount count: "
  L6 = L2
  L7 = " type: "
  L8 = type
  L9 = L2
  L8 = L8(L9)
  L5 = L5 .. L6 .. L7 .. L8
  L3(L4, L5)
  L3 = tonumber
  L4 = L2
  L3 = L3(L4)
  L4 = _UPVALUE2_
  if L3 < L4 then
    L3 = false
    return L3
  else
    L3 = true
    return L3
  end
end
TransportListCount = L14
function L14(A0)
  local L1, L2, L3
  L1 = TransportListCount
  L2 = A0
  L1 = L1(L2)
  if L1 then
    L2 = delSubTransportList
    L3 = A0
    L2(L3)
    L2 = TransportListCount
    L3 = A0
    return L2(L3)
  else
    L2 = false
    return L2
  end
end
checkTransportListCount = L14
function L14(A0, A1, A2)
  local L3, L4, L5, L6, L7, L8
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN commitBDPanListi mode: "
  L6 = A0
  L7 = " value: "
  L8 = A1
  L5 = L5 .. L6 .. L7 .. L8
  L3(L4, L5)
  L3 = "uci del_list baidupan.user."
  L4 = A0
  L5 = "='"
  L6 = A1
  L7 = "'"
  L3 = L3 .. L4 .. L5 .. L6 .. L7
  L4 = handleBaidupanUci
  L5 = L3
  L4(L5)
  L4 = "uci add_list baidupan.user."
  L5 = A0
  L6 = "='"
  L7 = A1
  L8 = "'"
  L4 = L4 .. L5 .. L6 .. L7 .. L8
  L5 = handleBaidupanUci
  L6 = L4
  L5(L6)
  L5 = handleBaidupanUci
  L6 = "uci commit baidupan"
  L5(L6)
end
commitBDPanList = L14
function L14(A0, A1, A2, A3, A4)
  local L5, L6, L7, L8, L9
  L5 = A0
  L6 = ":4:"
  L7 = A1
  L8 = ":"
  L9 = A2
  L5 = L5 .. L6 .. L7 .. L8 .. L9
  L6 = sendMsgtoBaidupan
  L7 = "0"
  L8 = L5
  L6(L7, L8)
end
puaseUpload = L14
function L14(A0, A1, A2, A3, A4)
  local L5, L6, L7, L8, L9, L10, L11, L12, L13
  L5 = A0
  L6 = ":1:"
  L7 = A1
  L8 = ":"
  L9 = A2
  L10 = ":"
  L11 = A3
  L12 = ":"
  L13 = A4
  L5 = L5 .. L6 .. L7 .. L8 .. L9 .. L10 .. L11 .. L12 .. L13
  L6 = sendMsgtoBaidupan
  L7 = "0"
  L8 = L5
  L6(L7, L8)
end
continueUpload = L14
function L14(A0, A1, A2, A3)
  local L4, L5, L6, L7, L8, L9, L10, L11
  if not (A0 and A2) or not A1 then
    L4 = _UPVALUE0_
    L4 = L4.log
    L5 = _UPVALUE1_
    L6 = "invalid input parameters!"
    L4(L5, L6)
    L4 = BDPAN_ERROR_CODE
    L4 = L4.ERROR_INTERNAL
    return L4
  end
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "get config from peer: "
  L7 = A0
  L8 = " create file"
  L9 = A2
  L6 = L6 .. L7 .. L8 .. L9
  L4(L5, L6)
  L4 = nil
  if A3 == "0" then
    L5 = "curl -k -L '"
    L6 = A0
    L7 = "&access_token="
    L8 = A1
    L9 = "' -o '"
    L10 = A2
    L11 = "' -H 'User-Agent: pan.baidu.com' -w %{http_code}"
    L4 = L5 .. L6 .. L7 .. L8 .. L9 .. L10 .. L11
  else
    L5 = "curl -k -L -C - '"
    L6 = A0
    L7 = "&access_token="
    L8 = A1
    L9 = "' -o '"
    L10 = A2
    L11 = "' -H 'User-Agent: pan.baidu.com' -w %{http_code}"
    L4 = L5 .. L6 .. L7 .. L8 .. L9 .. L10 .. L11
  end
  L5 = _UPVALUE0_
  L5 = L5.log
  L6 = _UPVALUE1_
  L7 = "BAIDUPAN getFileFromDlin URL: "
  L8 = L4
  L7 = L7 .. L8
  L5(L6, L7)
  L5 = luci
  L5 = L5.util
  L5 = L5.exec
  L6 = L4
  L5 = L5(L6)
  L6 = _UPVALUE0_
  L6 = L6.log
  L7 = _UPVALUE1_
  L8 = "BAIDUPAN getFileFromDlink result: "
  L9 = L5
  L8 = L8 .. L9
  L6(L7, L8)
  if L5 == nil or L5 == "" then
    L6 = BDPAN_ERROR_CODE
    L6 = L6.ERROR_PAUSE
    return L6
  else
    L6 = _UPVALUE0_
    L6 = L6.log
    L7 = _UPVALUE1_
    L8 = "BAIDUPAN getFileFromDlin: result: "
    L9 = L5
    L8 = L8 .. L9
    L6(L7, L8)
  end
  L6 = _UPVALUE0_
  L6 = L6.log
  L7 = _UPVALUE1_
  L8 = "BAIDUPAN getFileFromDlin $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  success"
  L6(L7, L8)
  return L5
end
getFileFromDlink = L14
function L14(A0, A1, A2, A3)
  local L4, L5, L6, L7, L8, L9, L10, L11, L12, L13
  L4 = {}
  L5 = 0
  if not (A0 and A1 and A2) or not A3 then
    L6 = _UPVALUE0_
    L6 = L6.log
    L7 = _UPVALUE1_
    L8 = "invalid input parameters!"
    L6(L7, L8)
    L6 = BDPAN_ERROR_CODE
    L6 = L6.ERROR_INTERNAL
    return L6
  end
  L6 = A3.size
  L7 = string
  L7 = L7.format
  L8 = "curl -k \"https://pan.baidu.com/rest/2.0/xpan/file?method=create&access_token=%s\" -d 'path=%s&size=%d&isdir=0&rtype=3&uploadid=%s&block_list=[\"%s\"]' -H \"User-Agent: pan.baidu.com\""
  L9 = A1
  L10 = A0
  L11 = L6
  L12 = A3.uploadid
  L13 = A3.block_list
  L7 = L7(L8, L9, L10, L11, L12, L13)
  L8 = _UPVALUE0_
  L8 = L8.log
  L9 = _UPVALUE1_
  L10 = "BAIDUPAN routerCreateFilePost URL: "
  L11 = L7
  L10 = L10 .. L11
  L8(L9, L10)
  L8 = luci
  L8 = L8.util
  L8 = L8.exec
  L9 = L7
  L8 = L8(L9)
  L9 = _UPVALUE0_
  L9 = L9.log
  L10 = _UPVALUE1_
  L11 = "BAIDUPAN routerCreateFilePost result: "
  L12 = L8
  L11 = L11 .. L12
  L9(L10, L11)
  if L8 == nil or L8 == "" then
    L9 = BDPAN_ERROR_CODE
    L9 = L9.ERROR_INTERNAL
    return L9
  else
    L9 = _UPVALUE2_
    L9 = L9.decode
    L10 = L8
    L9 = L9(L10)
    L10 = _UPVALUE0_
    L10 = L10.log
    L11 = _UPVALUE1_
    L12 = "BAIDUPAN routerCreateFilePost errno: "
    L13 = L9.errno
    L12 = L12 .. L13
    L10(L11, L12)
    L5 = L9.errno
  end
  L9 = _UPVALUE0_
  L9 = L9.log
  L10 = _UPVALUE1_
  L11 = "BAIDUPAN routerCreateFilePost $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  success"
  L9(L10, L11)
  return L5
end
routerCreateFilePost = L14
function L14(A0, A1, A2, A3, A4, A5, A6)
  local L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25, L26, L27, L28, L29, L30, L31, L32, L33, L34, L35
  L7 = {}
  L8 = 0
  L9 = "/tmp/baidupan/"
  L10 = A4
  L9 = L9 .. L10
  L10 = _UPVALUE0_
  L10 = L10.log
  L11 = _UPVALUE1_
  L12 = "invalid input parameters : "
  L13 = A3.uploadid
  L12 = L12 .. L13
  L10(L11, L12)
  L10 = _UPVALUE0_
  L10 = L10.log
  L11 = _UPVALUE1_
  L12 = "router_upload_file_post respone:  "
  L13 = A3.block_list_count
  L14 = " max_size: "
  L15 = A3.max_size
  L16 = " "
  L12 = L12 .. L13 .. L14 .. L15 .. L16 .. L17
  L10(L11, L12)
  L10 = A3.uploadid
  L11 = A3.block_list_count
  L12 = A3.max_size
  L13 = require
  L14 = "luci.util"
  L13 = L13(L14)
  if not (A0 and A1) or not A2 then
    L14 = _UPVALUE0_
    L14 = L14.log
    L15 = _UPVALUE1_
    L16 = "invalid input parameters!"
    L14(L15, L16)
    L14 = BDPAN_ERROR_CODE
    L14 = L14.ERROR_INTERNAL
    return L14
  end
  L14 = getBaidupanConfigDir
  L14 = L14()
  L15 = _UPVALUE0_
  L15 = L15.log
  L16 = _UPVALUE1_
  L20 = A2
  L15(L16, L17)
  L15 = io
  L15 = L15.open
  L16 = A2
  L15 = L15(L16, L17)
  if not L15 then
    L16 = _UPVALUE0_
    L16 = L16.log
    L16(L17, L18)
    L16 = BDPAN_ERROR_CODE
    L16 = L16.ERROR_INTERNAL
    return L16
  end
  L16 = getFileName
  L16 = L16(L17)
  L20 = "_"
  L21 = L16
  L16 = L17 .. L18 .. L19 .. L20 .. L21
  L20 = L16
  L17(L18, L19)
  for L20 = L17, L18, L19 do
    L21 = getFilePauseStat
    L21 = L21(L22)
    L25 = L21
    L26 = " i = "
    L27 = L20
    L22(L23, L24)
    if L21 == "1" then
      L22(L23, L24)
      L25 = A4
      L26 = A5
      L27 = A6
      L22(L23, L24, L25, L26, L27)
      for L25 = L22, L23, L24 do
        L26 = getFilePauseStat
        L27 = L16
        L26 = L26(L27)
        L21 = L26
        L26 = _UPVALUE0_
        L26 = L26.log
        L27 = _UPVALUE1_
        L28 = "file tmp read pause: "
        L29 = L21
        L30 = " j = "
        L31 = L25
        L32 = " i = "
        L33 = L20
        L28 = L28 .. L29 .. L30 .. L31 .. L32 .. L33
        L26(L27, L28)
        if L21 == "0" then
          break
        end
        L26 = os
        L26 = L26.execute
        L27 = "sleep 1"
        L26(L27)
      end
      L25 = A4
      L26 = A5
      L27 = A6
      L22(L23, L24, L25, L26, L27)
    end
    if not L22 then
      L23(L24)
      L25 = "file read failed "
      L23(L24, L25)
      return L23
    end
    L25 = L22
    L23(L24, L25)
    if not L23 then
      L25 = L15
      L24(L25)
      L25 = _UPVALUE1_
      L26 = "file calculate checksum failed: "
      L27 = A2
      L26 = L26 .. L27
      L24(L25, L26)
      return L24
    end
    L25 = xqurlencode
    L26 = A0
    L25 = L25(L26)
    A0 = L25
    L25 = "curl -k -F 'file=@"
    L26 = L9
    L27 = "' 'https://d.pcs.baidu.com/rest/2.0/pcs/superfile2?access_token="
    L28 = A1
    L29 = "&method=upload&type=tmpfile&path="
    L30 = A0
    L31 = "&uploadid="
    L32 = L10
    L33 = "&partseq="
    L34 = L24
    L35 = "'"
    L25 = L25 .. L26 .. L27 .. L28 .. L29 .. L30 .. L31 .. L32 .. L33 .. L34 .. L35
    L26 = _UPVALUE0_
    L26 = L26.log
    L27 = _UPVALUE1_
    L28 = "BAIDUPAN router_upload_file_post url: "
    L29 = L25
    L28 = L28 .. L29
    L26(L27, L28)
    L26 = execUrl
    L27 = L25
    L26 = L26(L27)
    L27 = _UPVALUE0_
    L27 = L27.log
    L28 = _UPVALUE1_
    L29 = "BAIDUPAN router_upload_file_post result: "
    L30 = L26
    L29 = L29 .. L30
    L27(L28, L29)
    if L26 == nil or L26 == "" then
      L27 = BDPAN_ERROR_CODE
      L27 = L27.ERROR_INTERNAL
      return L27
    else
      L27 = _UPVALUE4_
      L27 = L27.decode
      L28 = L26
      L27 = L27(L28)
      L28 = L27.errno
      if L28 then
        L8 = L27.errno
      end
    end
    L27 = "echo '"
    L28 = L20
    L29 = "' > '"
    L30 = L16
    L31 = "_tmp'"
    L27 = L27 .. L28 .. L29 .. L30 .. L31
    L28 = _UPVALUE0_
    L28 = L28.log
    L29 = _UPVALUE1_
    L30 = "BAIDUPAN pause cmd : "
    L31 = L27
    L30 = L30 .. L31
    L28(L29, L30)
    L28 = luci
    L28 = L28.util
    L28 = L28.exec
    L29 = L27
    L28(L29)
  end
  L17(L18)
  L18(L19)
  L20 = "_tmp'"
  L18(L19)
  L18(L19)
  L20 = "everything seems ok with config post!"
  L18(L19, L20)
  return L8
end
routerUploadFilePost = L14
function L14(A0, A1, A2, A3, A4)
  local L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23
  L6 = {}
  L7, L8 = nil, nil
  L9 = "/tmp/baidupan/"
  L10 = A4
  L9 = L9 .. L10
  if not (A0 and A1) or not A2 then
    L10 = _UPVALUE0_
    L10 = L10.log
    L11 = _UPVALUE1_
    L10(L11, L12)
    L10 = BDPAN_ERROR_CODE
    L10 = L10.ERROR_INTERNAL
    return L10
  end
  L10 = io
  L10 = L10.open
  L11 = A2
  L10 = L10(L11, L12)
  if not L10 then
    L11 = _UPVALUE0_
    L11 = L11.log
    L11(L12, L13)
    L11 = BDPAN_ERROR_CODE
    L11 = L11.ERROR_INTERNAL
    return L11
  end
  L11 = _UPVALUE2_
  L11 = L11(L12)
  L6.size = L11
  if A3 == "0" then
    L7 = 4194304
    L8 = L12
  elseif A3 == "1" then
    L7 = 16777216
    L8 = L12
  elseif A3 == "2" then
    L7 = 33554432
    L8 = L12
  end
  L15 = L11
  L16 = " max_size: "
  L17 = L7
  L18 = " count: "
  L19 = L8
  L12(L13, L14)
  for L15 = L12, L13, L14 do
    L17 = L10
    L16 = L10.read
    L18 = L7
    L16 = L16(L17, L18)
    if not L16 then
      break
    end
    L17 = _UPVALUE3_
    L18 = L9
    L19 = L16
    L17(L18, L19)
    L17 = _UPVALUE4_
    L17 = L17.md5File
    L18 = L9
    L17 = L17(L18)
    if not L17 then
      L18 = io
      L18 = L18.close
      L19 = L10
      L18(L19)
      L18 = _UPVALUE0_
      L18 = L18.log
      L19 = _UPVALUE1_
      L20 = "file calculate checksum failed: "
      L21 = A2
      L20 = L20 .. L21
      L18(L19, L20)
      L18 = BDPAN_ERROR_CODE
      L18 = L18.ERROR_INTERNAL
      return L18
    elseif not L5 then
      L5 = L17
    else
      L18 = L5
      L19 = "\",\""
      L20 = L17
      L5 = L18 .. L19 .. L20
    end
  end
  L12(L13)
  L6.block_list = L5
  L6.block_list_count = L8
  L6.max_size = L7
  L15 = L11
  L16 = " block_list: "
  L17 = L6.block_list
  L18 = " block_list_count: "
  L19 = L6.block_list_count
  L12(L13, L14)
  L15 = A0
  L16 = "&size="
  L17 = L11
  L18 = "&isdir=0&autoinit=1&rtype=3&block_list=[\""
  L19 = L5
  L20 = "\"]' -H \"User-Agent: pan.baidu.com\""
  L15 = "BAIDUPAN router_post: "
  L16 = L12
  L15 = L15 .. L16
  L13(L14, L15)
  if L13 == nil or L13 == "" then
    return L14
  else
    L15 = _UPVALUE1_
    L16 = "BAIDUPAN router_post: result: "
    L17 = L13
    L16 = L16 .. L17
    L14(L15, L16)
    L15 = L13
    L15 = _UPVALUE0_
    L15 = L15.log
    L16 = _UPVALUE1_
    L17 = "BAIDUPAN router_post: errno: "
    L18 = L14.errno
    L19 = " uploadid: "
    L20 = L14.uploadid
    L17 = L17 .. L18 .. L19 .. L20
    L15(L16, L17)
    L15 = L14.uploadid
    L6.uploadid = L15
  end
  L15 = _UPVALUE1_
  L16 = "router_post respone: "
  L17 = L6.block_list
  L18 = " "
  L19 = L6.block_list_count
  L20 = " "
  L21 = L6.max_size
  L22 = " uploadid: "
  L23 = L6.uploadid
  L16 = L16 .. L17 .. L18 .. L19 .. L20 .. L21 .. L22 .. L23
  L14(L15, L16)
  return L6
end
routerPost = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7
  L2 = A0
  L3 = A1
  L2 = L2 .. L3
  L3 = _UPVALUE0_
  L4 = L2
  L3 = L3(L4)
  L4 = _UPVALUE1_
  L4 = L4.log
  L5 = _UPVALUE2_
  L6 = "creat_baidupan_dir: "
  L7 = L2
  L6 = L6 .. L7
  L4(L5, L6)
  if not L3 then
    L4 = _UPVALUE1_
    L4 = L4.log
    L5 = _UPVALUE2_
    L6 = "create dir success!"
    L4(L5, L6)
    L4 = os
    L4 = L4.execute
    L5 = "mkdir -p "
    L6 = L2
    L7 = " >/dev/null 2>&1"
    L5 = L5 .. L6 .. L7
    L4(L5)
  end
end
creat_baidupan_dir = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14
  L2 = require
  L3 = "xiaoqiang.common.XQFunction"
  L2 = L2(L3)
  L3 = tonumber
  L4 = A0
  L3 = L3(L4)
  L4 = "ls -altr "
  L5 = A1
  L6 = " |awk '{print $5}'"
  L4 = L4 .. L5 .. L6
  L5 = _UPVALUE0_
  L5 = L5.log
  L6 = _UPVALUE1_
  L7 = "BAIDUPAN getDownloadRouterStatus cmd: "
  L8 = L4
  L9 = "file max size: "
  L10 = L3
  L7 = L7 .. L8 .. L9 .. L10
  L5(L6, L7)
  L5 = luci
  L5 = L5.util
  L5 = L5.exec
  L6 = L4
  L5 = L5(L6)
  L7 = L5
  L6 = L5.sub
  L8 = 1
  L9 = #L5
  L9 = L9 - 1
  L6 = L6(L7, L8, L9)
  L5 = L6
  L6 = tonumber
  L7 = L5
  L6 = L6(L7)
  L7 = _UPVALUE0_
  L7 = L7.log
  L8 = _UPVALUE1_
  L9 = "BAIDUPAN getDownloadRouterStatus current result : "
  L10 = L5
  L11 = " file_size: "
  L12 = L6
  L13 = " max size: "
  L14 = L3
  L9 = L9 .. L10 .. L11 .. L12 .. L13 .. L14
  L7(L8, L9)
  L7 = tostring
  L8 = math
  L8 = L8.floor
  L9 = L6 / L3
  L9 = L9 * 100
  L8 = L8(L9)
  L9 = "%"
  L8 = L8 .. L9
  L7 = L7(L8)
  L8 = _UPVALUE0_
  L8 = L8.log
  L9 = _UPVALUE1_
  L10 = "getBaiduToRouterStatus: "
  L11 = L7
  L10 = L10 .. L11
  L8(L9, L10)
  return L7
end
getBaiduToRouterStatus = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8, L9
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = _UPVALUE1_
  L4 = "BAIDUPAN getDownloadRouterStatus filename: "
  L5 = A1
  L6 = " file_max_size: "
  L7 = A0
  L4 = L4 .. L5 .. L6 .. L7
  L2(L3, L4)
  L2 = "ls -altr "
  L3 = A1
  L4 = " |awk '{print $5}'"
  L2 = L2 .. L3 .. L4
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN getDownloadRouterStatus cmd: "
  L6 = L2
  L5 = L5 .. L6
  L3(L4, L5)
  L3 = luci
  L3 = L3.util
  L3 = L3.exec
  L4 = L2
  L3 = L3(L4)
  result = L3
  L3 = result
  L4 = L3
  L3 = L3.sub
  L5 = 1
  L6 = result
  L6 = #L6
  L6 = L6 - 1
  L3 = L3(L4, L5, L6)
  result = L3
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN getDownloadRouterStatus current result : "
  L6 = result
  L5 = L5 .. L6
  L3(L4, L5)
  L3 = tonumber
  L4 = result
  L3 = L3(L4)
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN getDownloadRouterStatus result: "
  L7 = result
  L8 = "file_size: "
  L9 = L3
  L6 = L6 .. L7 .. L8 .. L9
  L4(L5, L6)
  L4 = tostring
  L5 = math
  L5 = L5.floor
  L6 = L3 / A0
  L6 = L6 * 100
  L5 = L5(L6)
  L6 = "%"
  L5 = L5 .. L6
  L4 = L4(L5)
  return L4
end
getDownloadRouterStatus = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13
  L2 = 0
  L3 = nil
  L4 = require
  L4 = L4(L5)
  for L8, L9 in L5, L6, L7 do
    L10 = _UPVALUE0_
    L10 = L10.log
    L11 = _UPVALUE1_
    L12 = "BAIDUPAN local file: "
    L13 = L9
    L12 = L12 .. L13
    L10(L11, L12)
    L10 = userFileSize
    L11 = L9
    L12 = A1
    L10 = L10(L11, L12)
    L2 = L10
    if L2 ~= 0 then
      return L2
    end
  end
  return L3
end
parsesLocalDire = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13
  L1 = {}
  for L5, L6 in L2, L3, L4 do
    L7 = string
    L7 = L7.split
    L8 = L6
    L9 = ":"
    L7 = L7(L8, L9)
    L8 = L7[1]
    L1.filename = L8
    L8 = L7[2]
    L1.status = L8
    L8 = L7[3]
    L1.size = L8
    L8 = _UPVALUE0_
    L8 = L8.log
    L9 = _UPVALUE1_
    L10 = "BAIDUPAN local file: "
    L11 = L1.filename
    L12 = " status: "
    L13 = L7[2]
    L10 = L10 .. L11 .. L12 .. L13
    L8(L9, L10)
  end
  return L1
end
parseList = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15
  L1 = 0
  L2 = nil
  for L6, L7 in L3, L4, L5 do
    L8 = string
    L8 = L8.gsub
    L9 = L7.filename
    L10 = "%s+"
    L11 = ""
    L8 = L8(L9, L10, L11)
    L7.filename = L8
    L8 = _UPVALUE0_
    L8 = L8.log
    L9 = _UPVALUE1_
    L10 = "BAIDUPAN parseDlink dlink: "
    L11 = L7.dlink
    L12 = " filename: "
    L13 = L7.filename
    L14 = " size: "
    L15 = L7.size
    L10 = L10 .. L11 .. L12 .. L13 .. L14 .. L15
    L8(L9, L10)
  end
  return L2
end
parseDlink = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10
  L1 = 0
  L2 = require
  L3 = "luci.util"
  L2 = L2(L3)
  L3 = "uci get baidupan.user."
  L4 = A0
  L3 = L3 .. L4
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN get_list get_list: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  L4 = luci
  L4 = L4.util
  L4 = L4.exec
  L5 = L3
  L4 = L4(L5)
  L5 = string
  L5 = L5.gsub
  L6 = L4
  L7 = "^[%s\n\r\t]*(.-)[%s\n\r\t]*$"
  L8 = "%1"
  L5 = L5(L6, L7, L8)
  L4 = L5
  L5 = _UPVALUE0_
  L5 = L5.log
  L6 = _UPVALUE1_
  L7 = "BAIDUPAN get_list result: "
  L8 = L4
  L7 = L7 .. L8
  L5(L6, L7)
  L5 = L2.split
  L6 = L4
  L7 = " "
  L5 = L5(L6, L7)
  L6 = _UPVALUE0_
  L6 = L6.log
  L7 = _UPVALUE1_
  L8 = "BAIDUPAN get_list type: "
  L9 = type
  L10 = L5
  L9 = L9(L10)
  L8 = L8 .. L9
  L6(L7, L8)
  L6 = _UPVALUE2_
  L6 = L6.encode
  L7 = L5
  L6 = L6(L7)
  L7 = _UPVALUE0_
  L7 = L7.log
  L8 = _UPVALUE1_
  L9 = "BAIDUPAN get_list b: "
  L10 = L6
  L9 = L9 .. L10
  L7(L8, L9)
  return L5
end
getList = L14
function L14()
  local L0, L1, L2, L3, L4, L5, L6, L7, L8, L9
  L0 = 0
  L1 = nil
  L2 = "df -h | grep extdisks | awk '{print $6}' | sed -n '1p'"
  L3 = luci
  L3 = L3.util
  L3 = L3.exec
  L4 = L2
  L3 = L3(L4)
  L4 = string
  L4 = L4.gsub
  L5 = L3
  L6 = "^[%s\n\r\t]*(.-)[%s\n\r\t]*$"
  L7 = "%1"
  L4 = L4(L5, L6, L7)
  L3 = L4
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN getDownloadRouterStatus mount disk: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  L4 = _UPVALUE2_
  L4 = L4.isStrNil
  L5 = L3
  L4 = L4(L5)
  if L4 then
    L4 = BDPAN_ERROR_CODE
    L4 = L4.ERROR_INVALID_DISK
    return L4
  else
    L1 = L3
  end
  L4 = creat_baidupan_dir
  L5 = L1
  L6 = "/\230\157\165\232\135\170\231\153\190\229\186\166\231\189\145\231\155\152/"
  L4(L5, L6)
  L4 = L1
  L5 = "/\230\157\165\232\135\170\231\153\190\229\186\166\231\189\145\231\155\152/"
  L1 = L4 .. L5
  L4 = _UPVALUE3_
  L5 = L4
  L4 = L4.get
  L6 = "baidupan"
  L7 = "user"
  L8 = "localdir"
  L4 = L4(L5, L6, L7, L8)
  if L4 and L4 == L1 then
    return L1
  end
  L5 = "uci set baidupan.user.localdir='"
  L6 = L1
  L7 = "';uci commit baidupan;"
  L5 = L5 .. L6 .. L7
  L6 = _UPVALUE0_
  L6 = L6.log
  L7 = _UPVALUE1_
  L8 = "BAIDUPAN getLocalPanDire add_dir: "
  L9 = L5
  L8 = L8 .. L9
  L6(L7, L8)
  L6 = handleBaidupanUci
  L7 = L5
  L6(L7)
  return L1
end
getLocalPanDire = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9
  L1 = 0
  L2 = nil
  L3 = "df -h | grep extdisks | awk '{print $6}' | sed -n '1p'"
  L4 = luci
  L4 = L4.util
  L4 = L4.exec
  L5 = L3
  L4 = L4(L5)
  L5 = string
  L5 = L5.gsub
  L6 = L4
  L7 = "^[%s\n\r\t]*(.-)[%s\n\r\t]*$"
  L8 = "%1"
  L5 = L5(L6, L7, L8)
  L4 = L5
  L5 = _UPVALUE0_
  L5 = L5.log
  L6 = _UPVALUE1_
  L7 = "BAIDUPAN getDownloadRouterStatus mount disk: "
  L8 = L4
  L7 = L7 .. L8
  L5(L6, L7)
  if not L4 then
    L5 = BDPAN_ERROR_CODE
    L5 = L5.ERROR_INVALID_DISK
    return L5
  else
    L2 = L4
  end
  L5 = "/.baidupan/"
  L6 = A0
  L7 = "/"
  L5 = L5 .. L6 .. L7
  L6 = creat_baidupan_dir
  L7 = L2
  L8 = L5
  L6(L7, L8)
  L6 = creat_baidupan_dir
  L7 = "/etc"
  L8 = L5
  L6(L7, L8)
  L5 = "/.baidupan/tmp/"
  L6 = creat_baidupan_dir
  L7 = L2
  L8 = L5
  L6(L7, L8)
  L6 = L2
  L7 = "/.baidupan/"
  L8 = A0
  L9 = "/"
  L5 = L6 .. L7 .. L8 .. L9
  L6 = _UPVALUE0_
  L6 = L6.log
  L7 = _UPVALUE1_
  L8 = "BAIDUPAN defult mount disk dir: "
  L9 = L5
  L8 = L8 .. L9
  L6(L7, L8)
  return L5
end
creatBaidupanConfigDir = L14
function L14()
  local L0, L1, L2, L3, L4, L5, L6, L7
  L0 = 0
  L1 = nil
  L2 = "df -h | grep extdisks | awk '{print $6}' | sed -n '1p'"
  L3 = luci
  L3 = L3.util
  L3 = L3.exec
  L4 = L2
  L3 = L3(L4)
  L4 = string
  L4 = L4.gsub
  L5 = L3
  L6 = "^[%s\n\r\t]*(.-)[%s\n\r\t]*$"
  L7 = "%1"
  L4 = L4(L5, L6, L7)
  L3 = L4
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN getDownloadRouterStatus mount disk: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  if not L3 then
    L4 = BDPAN_ERROR_CODE
    L4 = L4.ERROR_INVALID_DISK
    return L4
  else
    L1 = L3
  end
  return L1
end
getBaidupanConfigDir = L14
function L14(A0)
  local L1, L2, L3, L4, L5
  L1 = _UPVALUE0_
  L2 = L1
  L1 = L1.get
  L3 = "baidupan"
  L4 = "user"
  L5 = "name"
  L1 = L1(L2, L3, L4, L5)
  if L1 and L1 == A0 then
    L2 = false
    return L2
  else
    L2 = "uci set baidupan.user.name='"
    L3 = A0
    L4 = "';uci commit baidupan;"
    L2 = L2 .. L3 .. L4
    L3 = handleBaidupanUci
    L4 = L2
    L3(L4)
    L3 = creatBaidupanConfigDir
    L4 = A0
    L3(L4)
    L3 = true
    return L3
  end
end
setUserName = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7
  L1 = "ps | grep baidupan.lua | grep "
  L2 = A0
  L3 = " | grep -v grep | wc -l "
  L1 = L1 .. L2 .. L3
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = _UPVALUE1_
  L4 = "BAIDUPAN checkBaidupanProcess cmd: "
  L5 = L1
  L4 = L4 .. L5
  L2(L3, L4)
  L2 = luci
  L2 = L2.util
  L2 = L2.exec
  L3 = L1
  L2 = L2(L3)
  L3 = tonumber
  L4 = L2
  L3 = L3(L4)
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN checkBaidupanProcess count: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  if 1 < L3 then
    L4 = true
    return L4
  end
  L4 = false
  return L4
end
checkBaidupanProcess = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8
  if A1 == "0" then
    L3 = "cat /etc/config/baidupan | grep upload | fgrep '"
    L4 = A0
    L5 = "' | awk 'NR==1 {print $3}'"
    L2 = L3 .. L4 .. L5
  elseif A1 == "1" then
    L3 = "cat /etc/config/baidupan | grep download | fgrep '"
    L4 = A0
    L5 = "' | awk 'NR==1 {print $3}'"
    L2 = L3 .. L4 .. L5
  elseif A1 == "2" then
    L3 = "cat /etc/config/baidupan | grep webget | fgrep '"
    L4 = A0
    L5 = "' | awk 'NR==1 {print $3}'"
    L2 = L3 .. L4 .. L5
  else
    return
  end
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN getConfigFileList cmd: "
  L6 = L2
  L7 = " listtype: "
  L8 = A1
  L5 = L5 .. L6 .. L7 .. L8
  L3(L4, L5)
  L3 = luci
  L3 = L3.util
  L3 = L3.exec
  L4 = L2
  L3 = L3(L4)
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN getConfigFileList file_str: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  L4 = string
  L4 = L4.gsub
  L5 = L3
  L6 = "^[%s\n\r\t]*(.-)[%s\n\r\t]*$"
  L7 = "%1"
  L4 = L4(L5, L6, L7)
  L3 = L4
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN last getConfigFileList file_str: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  return L3
end
getConfigFileList = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8
  if A1 == "0" then
    L3 = "cat /etc/config/baidupan_save | grep upload | fgrep '"
    L4 = A0
    L5 = "' | awk 'NR==1 {print $3}'"
    L2 = L3 .. L4 .. L5
  elseif A1 == "1" then
    L3 = "cat /etc/config/baidupan_save | grep download | fgrep '"
    L4 = A0
    L5 = "' | awk 'NR==1 {print $3}'"
    L2 = L3 .. L4 .. L5
  elseif A1 == "2" then
    L3 = "cat /etc/config/baidupan_save | grep webget | fgrep '"
    L4 = A0
    L5 = "' | awk 'NR==1 {print $3}'"
    L2 = L3 .. L4 .. L5
  else
    return
  end
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN getSaveConfigFileList cmd: "
  L6 = L2
  L7 = " listtype: "
  L8 = A1
  L5 = L5 .. L6 .. L7 .. L8
  L3(L4, L5)
  L3 = luci
  L3 = L3.util
  L3 = L3.exec
  L4 = L2
  L3 = L3(L4)
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN getSaveConfigFileList file_str: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  L4 = string
  L4 = L4.gsub
  L5 = L3
  L6 = "^[%s\n\r\t]*(.-)[%s\n\r\t]*$"
  L7 = "%1"
  L4 = L4(L5, L6, L7)
  L3 = L4
  L4 = _UPVALUE0_
  L4 = L4.log
  L5 = _UPVALUE1_
  L6 = "BAIDUPAN last getSaveConfigFileList file_str: "
  L7 = L3
  L6 = L6 .. L7
  L4(L5, L6)
  return L3
end
getSaveConfigFileList = L14
function L14()
  local L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10
  L0 = "ps ww | grep baidupan.lua | grep -v grep | awk '{print $1}'"
  L1 = _UPVALUE0_
  L1 = L1.log
  L1(L2, L3)
  L1 = luci
  L1 = L1.util
  L1 = L1.execl
  L1 = L1(L2)
  for L5, L6 in L2, L3, L4 do
    L7 = _UPVALUE0_
    L7 = L7.log
    L8 = _UPVALUE1_
    L9 = "BAIDUPAN kill_baidupan_process pid: "
    L10 = L6
    L9 = L9 .. L10
    L7(L8, L9)
    if L6 == nil or L6 == "" then
      break
    end
    L7 = "echo `pstree -p "
    L8 = L6
    L9 = "`|awk 'BEGIN{ FS=\"(\" ; RS=\")\" } NF>1 { print $NF }'|xargs kill &>/dev/nul"
    L0 = L7 .. L8 .. L9
    L7 = _UPVALUE0_
    L7 = L7.log
    L8 = _UPVALUE1_
    L9 = "BAIDUPAN kill_baidupan_process cmd_str: "
    L10 = L0
    L9 = L9 .. L10
    L7(L8, L9)
    L7 = luci
    L7 = L7.util
    L7 = L7.exec
    L8 = L0
    L7 = L7(L8)
  end
end
kill_baidupan_lua_process = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6
  L1 = _UPVALUE0_
  L1 = L1.log
  L2 = _UPVALUE1_
  L3 = "BAIDUPAN kill_baidupan_process file_str: "
  L4 = A0
  L3 = L3 .. L4
  L1(L2, L3)
  L1 = "ps ww| grep "
  L2 = A0
  L3 = " | grep baidupan.lua | grep -v grep | awk 'NR==1 {print $1}'"
  L1 = L1 .. L2 .. L3
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = _UPVALUE1_
  L4 = "BAIDUPAN kill_baidupan_process cmd: "
  L5 = L1
  L4 = L4 .. L5
  L2(L3, L4)
  L2 = luci
  L2 = L2.util
  L2 = L2.exec
  L3 = L1
  L2 = L2(L3)
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN kill_baidupan_process res: "
  L6 = L2
  L5 = L5 .. L6
  L3(L4, L5)
  if L2 == nil or L2 == "" then
    return
  end
  L3 = string
  L3 = L3.sub
  L4 = L2
  L5 = 1
  L6 = -2
  L3 = L3(L4, L5, L6)
  L2 = L3
  L3 = "echo `pstree -p "
  L4 = L2
  L5 = "`|awk 'BEGIN{ FS=\"(\" ; RS=\")\" } NF>1 { print $NF }'|xargs kill &>/dev/nul"
  L1 = L3 .. L4 .. L5
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN kill_baidupan_process cmd_str: "
  L6 = L1
  L5 = L5 .. L6
  L3(L4, L5)
  L3 = luci
  L3 = L3.util
  L3 = L3.exec
  L4 = L1
  L3 = L3(L4)
  L2 = L3
end
kill_baidupan_process = L14
function L14(A0, A1, A2)
  local L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14
  if A0 == "0" then
    L3 = _UPVALUE0_
    L3 = L3.decode
    L3 = L3(L4)
    for L7, L8 in L4, L5, L6 do
      L9 = _UPVALUE1_
      L9 = L9.log
      L10 = _UPVALUE2_
      L11 = "BAIDUPAN actionid : "
      L12 = L8
      L11 = L11 .. L12
      L9(L10, L11)
      L9 = getSaveConfigFileList
      L10 = L8
      L11 = A1
      L9 = L9(L10, L11)
      L10 = _UPVALUE1_
      L10 = L10.log
      L11 = _UPVALUE2_
      L12 = "BAIDUPAN last deleteTransportList file_str: "
      L13 = L9
      L12 = L12 .. L13
      L10(L11, L12)
      if A1 == "0" then
        L10 = "uci del_list baidupan_save.user.upload_save="
        L11 = L9
        L12 = ";uci commit baidupan_save;"
        L10 = L10 .. L11 .. L12
        L11 = _UPVALUE1_
        L11 = L11.log
        L12 = _UPVALUE2_
        L13 = "BAIDUPAN last deleteTransportList del_upload_list: "
        L14 = L10
        L13 = L13 .. L14
        L11(L12, L13)
        L11 = handleBaidupanSaveUci
        L12 = L10
        L11(L12)
      elseif A1 == "1" then
        L10 = "uci del_list baidupan_save.user.download_save="
        L11 = L9
        L12 = ";uci commit baidupan_save;"
        L10 = L10 .. L11 .. L12
        L11 = _UPVALUE1_
        L11 = L11.log
        L12 = _UPVALUE2_
        L13 = "BAIDUPAN last deleteTransportList del_download_list: "
        L14 = L10
        L13 = L13 .. L14
        L11(L12, L13)
        L11 = handleBaidupanSaveUci
        L12 = L10
        L11(L12)
      else
        L10 = _UPVALUE1_
        L10 = L10.log
        L11 = _UPVALUE2_
        L12 = "BAIDUPAN last deleteTransportList error "
        L10(L11, L12)
      end
    end
  end
  L3 = true
  return L3
end
deleteSaveTransportList = L14
function L14(A0, A1, A2, A3)
  local L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17
  L4 = getBaidupanConfigDir
  L4 = L4()
  L5 = L4
  L6 = "/.baidupan/tmp/"
  L5 = L5 .. L6
  L6 = "/etc/.baidupan/"
  L7 = A3
  L6 = L6 .. L7 .. L8
  L7 = _UPVALUE0_
  L7 = L7.log
  L7(L8, L9)
  if A0 == "1" then
    L7 = kill_baidupan_lua_process
    L7()
    if A1 == "0" then
      L7 = "rm -rf "
      L7 = L7 .. L8 .. L9
      L8(L9)
      L7 = L8 .. L9 .. L10
      L8(L9)
    elseif A1 == "1" then
      L7 = "rm -rf "
      L7 = L7 .. L8 .. L9
      L8(L9)
    else
      L7 = _UPVALUE0_
      L7 = L7.log
      L7(L8, L9)
    end
  else
    L7 = _UPVALUE2_
    L7 = L7.decode
    L7 = L7(L8)
    for L11, L12 in L8, L9, L10 do
      L13 = _UPVALUE0_
      L13 = L13.log
      L14 = _UPVALUE1_
      L15 = "BAIDUPAN actionid : "
      L16 = L12
      L15 = L15 .. L16
      L13(L14, L15)
      L13 = kill_baidupan_process
      L14 = L12
      L13(L14)
      if A1 == "0" then
        L13 = "rm -rf "
        L14 = L6
        L15 = "upload_"
        L16 = L12
        L13 = L13 .. L14 .. L15 .. L16
        L14 = _UPVALUE0_
        L14 = L14.log
        L15 = _UPVALUE1_
        L16 = "BAIDUPAN last del_upload_list: "
        L17 = L13
        L16 = L16 .. L17
        L14(L15, L16)
        L14 = luci
        L14 = L14.util
        L14 = L14.exec
        L15 = L13
        L14(L15)
      elseif A1 == "1" then
        L13 = "rm -rf "
        L14 = L6
        L15 = "download_"
        L16 = L12
        L13 = L13 .. L14 .. L15 .. L16
        L14 = _UPVALUE0_
        L14 = L14.log
        L15 = _UPVALUE1_
        L16 = "BAIDUPAN last del_download_list: "
        L17 = L13
        L16 = L16 .. L17
        L14(L15, L16)
        L14 = luci
        L14 = L14.util
        L14 = L14.exec
        L15 = L13
        L14(L15)
      else
        L13 = _UPVALUE0_
        L13 = L13.log
        L14 = _UPVALUE1_
        L15 = "BAIDUPAN last deleteTransportList error "
        L13(L14, L15)
      end
    end
  end
  L7 = true
  return L7
end
deleteTransportList = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8
  L4 = io
  L4 = L4.open
  L5 = A0
  L6 = "rb"
  L4 = L4(L5, L6)
  if not L4 then
    L5 = _UPVALUE0_
    L5 = L5.log
    L6 = _UPVALUE1_
    L7 = "file open failed: "
    L8 = A0
    L7 = L7 .. L8
    L5(L6, L7)
    L5 = BDPAN_ERROR_CODE
    L5 = L5.ERROR_INTERNAL
    return L5
  end
  L5 = _UPVALUE2_
  L6 = L4
  L5 = L5(L6)
  if A1 == "0" then
    L3 = 4194304
    L6 = math
    L6 = L6.ceil
    L7 = L5 / L3
    L6 = L6(L7)
    L2 = L6
  elseif A1 == "1" then
    L3 = 16777216
    L6 = math
    L6 = L6.ceil
    L7 = L5 / L3
    L6 = L6(L7)
    L2 = L6
  elseif A1 == "2" then
    L3 = 33554432
    L6 = math
    L6 = L6.ceil
    L7 = L5 / L3
    L6 = L6(L7)
    L2 = L6
  end
  L6 = io
  L6 = L6.close
  L7 = L4
  L6(L7)
  L6 = L2
  L7 = L5
  return L6, L7
end
getLocalFileSize = L14
function L14(A0)
  local L1, L2, L3, L4, L5
  L1 = string
  L1 = L1.format
  L2 = "/usr/sbin/baidupan_uci_lock.sh \"%s\""
  L3 = A0
  L1 = L1(L2, L3)
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = baidupan_debug_level
  L4 = "BAIDUPAN handleBaidupanUci: "
  L5 = L1
  L4 = L4 .. L5
  L2(L3, L4)
  L2 = luci
  L2 = L2.util
  L2 = L2.exec
  L3 = L1
  L2(L3)
end
handleBaidupanUci = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14
  L1 = {}
  L2 = {}
  L1.uploading = L2
  L2 = {}
  L1.error = L2
  L2 = {}
  L1.finished = L2
  L2 = {}
  L3 = require
  L4 = "luci.util"
  L3 = L3(L4)
  L4 = require
  L4 = L4(L5)
  for L8, L9 in L5, L6, L7 do
    L10 = L3.split
    L11 = L9
    L12 = ":"
    L10 = L10(L11, L12)
    L11 = tonumber
    L12 = L10[2]
    L11 = L11(L12)
    if L11 == 1 or L11 == 0 or L11 == 4 then
      L12 = table
      L12 = L12.insert
      L13 = L1.uploading
      L14 = L9
      L12(L13, L14)
    elseif L11 == 2 then
      L12 = table
      L12 = L12.insert
      L13 = L1.finished
      L14 = L9
      L12(L13, L14)
    else
      L12 = table
      L12 = L12.insert
      L13 = L1.error
      L14 = L9
      L12(L13, L14)
    end
  end
  return L1
end
splitList = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15
  L2 = {}
  for L6, L7 in L3, L4, L5 do
    L8 = getFileName
    L9 = L7
    L8 = L8(L9)
    file_name = L8
    L9 = L7
    L8 = L7.match
    L10 = "(.*[/\\])"
    L8 = L8(L9, L10)
    dir_name = L8
    L8 = _UPVALUE0_
    L8 = L8.log
    L9 = _UPVALUE1_
    L10 = "BAIDUPAN local file: "
    L11 = L7
    L12 = "file name: "
    L13 = file_name
    L14 = " dir: "
    L15 = dir_name
    L10 = L10 .. L11 .. L12 .. L13 .. L14 .. L15
    L8(L9, L10)
    L8 = string
    L8 = L8.find
    L9 = file_name
    L10 = A1
    L8 = L8(L9, L10)
    if L8 ~= nil then
      L9 = string
      L9 = L9.gsub
      L10 = file_name
      L11 = A1
      L12 = "_"
      L9 = L9(L10, L11, L12)
      L10 = dir_name
      L11 = file_name
      L9 = L10 .. L11
      L10 = "mv \""
      L11 = L7
      L12 = "\" \""
      L13 = L9
      L14 = "\""
      L10 = L10 .. L11 .. L12 .. L13 .. L14
      L11 = _UPVALUE0_
      L11 = L11.log
      L12 = _UPVALUE1_
      L13 = "BAIDUPAN rename cmd: "
      L14 = L10
      L13 = L13 .. L14
      L11(L12, L13)
      L11 = luci
      L11 = L11.util
      L11 = L11.exec
      L12 = L10
      L11(L12)
      L11 = table
      L11 = L11.insert
      L12 = L2
      L13 = L9
      L11(L12, L13)
    else
      L9 = _UPVALUE0_
      L9 = L9.log
      L10 = _UPVALUE1_
      L11 = "BAIDUPAN local file: "
      L12 = L7
      L11 = L11 .. L12
      L9(L10, L11)
      L9 = table
      L9 = L9.insert
      L10 = L2
      L11 = L7
      L9(L10, L11)
    end
  end
  return L2
end
handleFileDirname = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9
  L1 = {}
  L2 = {}
  L3 = {}
  L4 = require
  L5 = "luci.util"
  L4 = L4(L5)
  L5 = require
  L6 = "xiaoqiang.XQLog"
  L5 = L5(L6)
  L6 = L5.log
  L7 = _UPVALUE0_
  L8 = "BAIDUPAN checkLocalFileName: "
  L6(L7, L8)
  L6 = _UPVALUE1_
  L6 = L6.decode
  L7 = A0
  L6 = L6(L7)
  L7 = handleFileDirname
  L8 = L6
  L9 = " "
  L7 = L7(L8, L9)
  L6 = L7
  L7 = handleFileDirname
  L8 = L6
  L9 = "'"
  L7 = L7(L8, L9)
  L1 = L7
  L7 = _UPVALUE1_
  L7 = L7.encode
  L8 = L1
  return L7(L8)
end
checkLocalFileName = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13
  L1 = {}
  L2 = require
  L3 = "xiaoqiang.XQLog"
  L2 = L2(L3)
  L3 = L2.log
  L3(L4, L5)
  L3 = _UPVALUE1_
  L3 = L3.decode
  L3 = L3(L4)
  for L7, L8 in L4, L5, L6 do
    L9 = L2.log
    L10 = _UPVALUE0_
    L11 = "BAIDUPAN remote file: "
    L12 = L8.filename
    L11 = L11 .. L12
    L9(L10, L11)
    L9 = string
    L9 = L9.find
    L10 = L8.filename
    L11 = ":"
    L9 = L9(L10, L11)
    if L9 ~= nil then
      L10 = string
      L10 = L10.gsub
      L11 = L8.filename
      L12 = ":"
      L13 = "_"
      L10 = L10(L11, L12, L13)
      L8.filename = L10
    end
    L10 = string
    L10 = L10.find
    L11 = L8.filename
    L12 = " "
    L10 = L10(L11, L12)
    L9 = L10
    if L9 ~= nil then
      L10 = string
      L10 = L10.gsub
      L11 = L8.filename
      L12 = " "
      L13 = "_"
      L10 = L10(L11, L12, L13)
      L8.filename = L10
    end
    L10 = table
    L10 = L10.insert
    L11 = L1
    L12 = L8
    L10(L11, L12)
  end
  return L4(L5)
end
checkRemoteFileName = L14
function L14(A0, A1)
  local L2, L3, L4, L5, L6, L7, L8
  L2 = _UPVALUE0_
  L2 = L2.log
  L3 = _UPVALUE1_
  L4 = " BAIDUPAN function: sendMsgtoBaidupan"
  L2(L3, L4)
  L2 = {}
  L2.type = A0
  L2.cmd = A1
  L3 = _UPVALUE2_
  L3 = L3.encode
  L4 = L2
  L3 = L3(L4)
  L4 = string
  L4 = L4.format
  L5 = "ubus call baidupan_action settaskstatus '%s'"
  L6 = L3
  L4 = L4(L5, L6)
  L5 = _UPVALUE0_
  L5 = L5.log
  L6 = _UPVALUE1_
  L7 = "BAIDUPAN send to process: "
  L8 = L4
  L7 = L7 .. L8
  L5(L6, L7)
  L5 = _UPVALUE3_
  L5 = L5.exec
  L6 = L4
  L5 = L5(L6)
  L6 = _UPVALUE4_
  L6 = L6.isStrNil
  L7 = L5
  L6 = L6(L7)
  if L6 then
    L6 = false
    return L6
  end
  L6 = true
  return L6
end
sendMsgtoBaidupan = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6
  L1 = _UPVALUE0_
  L1 = L1.log
  L2 = _UPVALUE1_
  L3 = "BAIDUPAN cleanUploadRepeatEnv 0: "
  L4 = A0
  L3 = L3 .. L4
  L1(L2, L3)
  L1 = getBaidupanConfigDir
  L1 = L1()
  L2 = "rm -rf "
  L3 = L1
  L4 = "/.baidupan/tmp/"
  L5 = A0
  L6 = "*"
  L2 = L2 .. L3 .. L4 .. L5 .. L6
  L3 = _UPVALUE0_
  L3 = L3.log
  L4 = _UPVALUE1_
  L5 = "BAIDUPAN cleanUploadRepeatEnv 2: "
  L6 = L2
  L5 = L5 .. L6
  L3(L4, L5)
  L3 = _UPVALUE2_
  L3 = L3.exec
  L4 = L2
  L3(L4)
end
cleanUploadRepeatEnv = L14
function L14(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13
  L1 = require
  L2 = "luci.util"
  L1 = L1(L2)
  L2 = require
  L3 = "xiaoqiang.XQLog"
  L2 = L2(L3)
  L3 = L2.log
  L3(L4, L5)
  L3 = _UPVALUE1_
  L3 = L3.decode
  L3 = L3(L4)
  for L7, L8 in L4, L5, L6 do
    L9 = _file_exists
    L10 = L8
    L9 = L9(L10)
    ret = L9
    L9 = ret
    if not L9 then
      L9 = ret
      return L9
    end
    L9 = string
    L9 = L9.find
    L10 = L8
    L11 = ":"
    L9 = L9(L10, L11)
    if L9 ~= nil then
      L10 = false
      return L10
    end
    L10 = string
    L10 = L10.find
    L11 = L8
    L12 = "@"
    L10 = L10(L11, L12)
    if L10 ~= nil then
      L11 = false
      return L11
    end
    L11 = string
    L11 = L11.find
    L12 = L8
    L13 = "|"
    L11 = L11(L12, L13)
    if L11 ~= nil then
      L12 = false
      return L12
    end
  end
  return L4
end
checkFileFormat = L14
