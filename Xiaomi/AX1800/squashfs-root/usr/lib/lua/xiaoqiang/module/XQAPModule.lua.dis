local L0, L1, L2, L3, L4, L5
L0 = module
L1 = "xiaoqiang.module.XQAPModule"
L2 = package
L2 = L2.seeall
L0(L1, L2)
L0 = require
L1 = "xiaoqiang.common.XQFunction"
L0 = L0(L1)
L1 = require
L2 = "xiaoqiang.common.XQConfigs"
L1 = L1(L2)
L2 = require
L3 = "luci.util"
L2 = L2(L3)
L3 = require
L4 = "luci.model.uci"
L3 = L3(L4)
L3 = L3.cursor
L3 = L3()
L4 = require
L5 = "xiaoqiang.XQLog"
L4 = L4(L5)
function L5()
  local L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13
  L0 = require
  L1 = "xiaoqiang.util.XQWifiUtil"
  L0 = L0(L1)
  L1 = require
  L2 = "xiaoqiang.util.XQLanWanUtil"
  L1 = L1(L2)
  L2 = require
  L3 = "xiaoqiang.module.XQMessageBox"
  L2 = L2(L3)
  L3 = _UPVALUE0_
  L3 = L3.getNetMode
  L3 = L3()
  L4 = L1.getLanIp
  L4 = L4()
  if L3 ~= "wifiapmode" and L3 ~= "lanapmode" then
    L5 = require
    L6 = "luci.model.uci"
    L5 = L5(L6)
    L5 = L5.cursor
    L5 = L5()
    L7 = L5
    L6 = L5.get_all
    L8 = "network"
    L9 = "lan"
    L6 = L6(L7, L8, L9)
    L8 = L5
    L7 = L5.section
    L9 = "backup"
    L10 = "backup"
    L11 = "lan"
    L12 = L6
    L7(L8, L9, L10, L11, L12)
    L8 = L5
    L7 = L5.commit
    L9 = "backup"
    L7(L8, L9)
  end
  L5 = os
  L5 = L5.execute
  L6 = "/usr/sbin/ap_mode.sh connect >/dev/null 2>/dev/null"
  L5(L6)
  L5 = L1.getLanIp
  L5 = L5()
  if L4 ~= L5 then
    L6 = require
    L7 = "xiaoqiang.util.XQSynchrodata"
    L6 = L6(L7)
    L7 = L2.removeMessage
    L8 = 4
    L7(L8)
    L7 = L0.setWiFiMacfilterModel
    L8 = false
    L7(L8)
    L7 = L0.setGuestWifi
    L8 = 1
    L9, L10, L11 = nil, nil, nil
    L12 = 0
    L13 = nil
    L7(L8, L9, L10, L11, L12, L13)
    L7 = _UPVALUE0_
    L7 = L7.setNetMode
    L8 = "lanapmode"
    L7(L8)
    L7 = L6.syncApLanIp
    L8 = L5
    L7(L8)
    return L5
  end
  L6 = nil
  return L6
end
setLanAPMode = L5
function L5()
  local L0, L1, L2, L3, L4, L5, L6
  L0 = require
  L1 = "xiaoqiang.util.XQWifiUtil"
  L0 = L0(L1)
  L1 = require
  L2 = "luci.model.uci"
  L1 = L1(L2)
  L1 = L1.cursor
  L1 = L1()
  L3 = L1
  L2 = L1.get
  L4 = "backup"
  L5 = "lan"
  L6 = "ipaddr"
  L2 = L2(L3, L4, L5, L6)
  L3 = _UPVALUE0_
  L3 = L3.setNetMode
  L4 = nil
  L3(L4)
  L3 = L0.setWiFiMacfilterModel
  L4 = false
  L3(L4)
  return L2
end
disableLanAP = L5
function L5(A0, A1)
  local L2, L3, L4, L5
  L2 = [[
        sleep 7;
        /usr/sbin/ap_mode.sh open;
        /usr/sbin/shareUpdate -b >/dev/null 2>/dev/null;
    ]]
  L3 = [[
        sleep 5;
        /usr/sbin/ap_mode.sh close;
        /usr/sbin/shareUpdate -b >/dev/null 2>/dev/null;
    ]]
  if A1 then
    if A0 then
      L4 = _UPVALUE0_
      L4 = L4.forkExec
      L5 = L2
      L4(L5)
    else
      L4 = _UPVALUE0_
      L4 = L4.forkExec
      L5 = L3
      L4(L5)
    end
  elseif A0 then
    L4 = os
    L4 = L4.execute
    L5 = L2
    L4(L5)
  else
    L4 = os
    L4 = L4.execute
    L5 = L3
    L4(L5)
  end
end
lanApServiceRestart = L5
function L5()
  local L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10
  L0 = require
  L1 = "luci.model.uci"
  L0 = L0(L1)
  L0 = L0.cursor
  L0 = L0()
  L1 = require
  L2 = "xiaoqiang.util.XQWifiUtil"
  L1 = L1(L2)
  L2 = require
  L3 = "xiaoqiang.util.XQSysUtil"
  L2 = L2(L3)
  L4 = L0
  L3 = L0.get_all
  L5 = "dhcp"
  L6 = "lan"
  L3 = L3(L4, L5, L6)
  L5 = L0
  L4 = L0.get_all
  L6 = "dhcp"
  L7 = "wan"
  L4 = L4(L5, L6, L7)
  L6 = L0
  L5 = L0.delete
  L7 = "backup"
  L8 = "lan"
  L5(L6, L7, L8)
  L6 = L0
  L5 = L0.delete
  L7 = "backup"
  L8 = "wifi1"
  L5(L6, L7, L8)
  L6 = L0
  L5 = L0.delete
  L7 = "backup"
  L8 = "wifi2"
  L5(L6, L7, L8)
  L6 = L0
  L5 = L0.delete
  L7 = "backup"
  L8 = "dhcplan"
  L5(L6, L7, L8)
  L6 = L0
  L5 = L0.delete
  L7 = "backup"
  L8 = "dhcpwan"
  L5(L6, L7, L8)
  L6 = L0
  L5 = L0.delete
  L7 = "backup"
  L8 = "vpn"
  L5(L6, L7, L8)
  L6 = L0
  L5 = L0.section
  L7 = "backup"
  L8 = "backup"
  L9 = "dhcplan"
  L10 = L3
  L5(L6, L7, L8, L9, L10)
  L6 = L0
  L5 = L0.section
  L7 = "backup"
  L8 = "backup"
  L9 = "dhcpwan"
  L10 = L4
  L5(L6, L7, L8, L9, L10)
  L6 = L0
  L5 = L0.commit
  L7 = "backup"
  L5(L6, L7)
  L5 = os
  L5 = L5.execute
  L6 = "backup_file=\"/etc/config/.network.mode.router\";cp /etc/config/network $backup_file"
  L5(L6)
  L5 = L2.getInitInfo
  L5 = L5()
  if L5 then
    L5 = L1.backupWifiInfo
    L6 = 1
    L5(L6)
    L5 = L1.backupWifiInfo
    L6 = 2
    L5(L6)
  end
end
backupConfigs = L5
function L5()
  local L0, L1, L2, L3, L4, L5, L6, L7, L8
  L0 = require
  L1 = "luci.model.uci"
  L0 = L0(L1)
  L0 = L0.cursor
  L0 = L0()
  L2 = L0
  L1 = L0.get_all
  L3 = "backup"
  L4 = "dhcplan"
  L1 = L1(L2, L3, L4)
  L3 = L0
  L2 = L0.get_all
  L4 = "backup"
  L5 = "dhcpwan"
  L2 = L2(L3, L4, L5)
  if L1 then
    L4 = L0
    L3 = L0.section
    L5 = "dhcp"
    L6 = "dhcp"
    L7 = "lan"
    L8 = L1
    L3(L4, L5, L6, L7, L8)
  end
  if L2 then
    L4 = L0
    L3 = L0.section
    L5 = "dhcp"
    L6 = "dhcp"
    L7 = "wan"
    L8 = L2
    L3(L4, L5, L6, L7, L8)
  end
  L3 = os
  L3 = L3.execute
  L4 = "backup_file=\"/etc/config/.network.mode.router\";[ -f $backup_file ] && mv $backup_file /etc/config/network"
  L3(L4)
  L4 = L0
  L3 = L0.commit
  L5 = "dhcp"
  L3(L4, L5)
  L4 = L0
  L3 = L0.commit
  L5 = "network"
  L3(L4, L5)
end
recoveryConfigs = L5
function L5()
  local L0, L1, L2
  L0 = os
  L0 = L0.execute
  L1 = "backup_file=\"/etc/config/.network.mode.router\";[ -f $backup_file ] && rm -rf  $backup_file"
  L0(L1)
  L0 = _UPVALUE0_
  L1 = L0
  L0 = L0.commit
  L2 = "network"
  L0(L1, L2)
end
removeConfigs = L5
function L5(A0)
  local L1, L2, L3, L4, L5, L6, L7
  L1 = require
  L2 = "luci.model.network"
  L1 = L1(L2)
  L1 = L1.init
  L1 = L1()
  L3 = L1
  L2 = L1.get_network
  L4 = "wan"
  L2 = L2(L3, L4)
  L4 = L1
  L3 = L1.get_network
  L5 = "wan_6"
  L3 = L3(L4, L5)
  if L2 then
    L5 = L2
    L4 = L2.set
    L6 = "auto"
    L7 = A0
    L4(L5, L6, L7)
  end
  if L3 then
    L5 = L3
    L4 = L3.set
    L6 = "auto"
    L7 = A0
    L4(L5, L6, L7)
  end
  L5 = L1
  L4 = L1.commit
  L6 = "network"
  L4(L5, L6)
end
setWanAuto = L5
function L5(A0)
  local L1, L2, L3, L4, L5, L6, L7, L8
  L1 = require
  L2 = "xiaoqiang.util.XQWifiUtil"
  L1 = L1(L2)
  L2, L3 = nil, nil
  L4 = recoveryConfigs
  L4()
  L4 = _UPVALUE0_
  L5 = L4
  L4 = L4.get
  L6 = "network"
  L7 = "lan"
  L8 = "ipaddr"
  L4 = L4(L5, L6, L7, L8)
  L2 = L4
  L4 = L1.getWifissid
  L4 = L4()
  L3 = L4
  L4 = setWanAuto
  L5 = nil
  L4(L5)
  L4 = L1.apcli_disable
  L5 = A0
  L4(L5)
  L4 = _UPVALUE1_
  L4 = L4.setNetMode
  L5 = nil
  L4(L5)
  L4 = L1.apcli_set_active
  L5 = nil
  L4(L5)
  L4 = L1.setWiFiMacfilterModel
  L5 = false
  L4(L5)
  L4 = actionForDisableWifiAP
  L4()
  L4 = L2
  L5 = L3
  return L4, L5
end
disableWifiAPMode = L5
function L5(A0)
  local L1, L2, L3
  if A0 then
    L1 = [[
		re_mode.sh open;
        ]]
  else
    L1 = [[
            sleep 10;
			re_mode.sh open;
        ]]
  end
  L2 = _UPVALUE0_
  L2 = L2.forkExec
  L3 = L1
  L2(L3)
end
actionForEnableWifiAP = L5
function L5()
  local L0, L1, L2
  L0 = [[
    sleep 3;
	re_mode.sh close;
    ]]
  L1 = _UPVALUE0_
  L1 = L1.forkExec
  L2 = L0
  L1(L2)
end
actionForDisableWifiAP = L5
function L5(A0)
  local L1, L2, L3, L4
  L1 = _UPVALUE0_
  L1 = L1.isStrNil
  L2 = A0
  L1 = L1(L2)
  if L1 then
    L1 = ""
    return L1
  else
    L2 = A0
    L1 = A0.gsub
    L3 = "\\"
    L4 = "\\\\"
    L1 = L1(L2, L3, L4)
    L2 = L1
    L1 = L1.gsub
    L3 = "`"
    L4 = "\\`"
    L1 = L1(L2, L3, L4)
    L2 = L1
    L1 = L1.gsub
    L3 = "\""
    L4 = "\\\""
    L1 = L1(L2, L3, L4)
    L2 = L1
    L1 = L1.gsub
    L3 = "%$"
    L4 = "\\$"
    return L1(L2, L3, L4)
  end
end
parseCmdline = L5
function L5(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)
  local L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25, L26, L27, L28, L29, L30, L31, L32, L33, L34, L35, L36, L37
  L12 = require
  L13 = "xiaoqiang.util.XQWifiUtil"
  L12 = L12(L13)
  L13 = {}
  L13.ifname = ""
  L13.ssid = A0
  L13.cmdssid = A0
  L13.password = A1
  L13.cmdpassword = A1
  L13.encryption = A3
  L13.enctype = A2
  L13.band = A4
  L13.channel = A5
  L13.bw = A6
  L13.reconnect = A11
  L14 = {}
  L14.connected = false
  L14.conerrmsg = ""
  L14.scan = true
  L14.ip = ""
  L15 = nil
  L16 = _UPVALUE0_
  L16 = L16.getNetMode
  L16 = L16()
  L17 = L13.ssid
  if L17 then
    L17 = L13.ssid
    L13.cmdssid = L17
    L17 = L13.password
    L13.cmdpassword = L17
    L17 = L12.apcli_check_apcliitem
    L18 = L13
    L17 = L17(L18)
    if L17 then
      L17 = L12.apcli_get_scanlist
      L18 = L13
      L17 = L17(L18)
      L18 = nil
      for L22, L23 in L19, L20, L21 do
        if L23 then
          L24 = L23.ssid
          if L24 == A0 then
            L18 = L23
            break
          end
        end
      end
      if not L18 then
        L14.scan = false
        return L14
      end
      L13.enctype = L19
      L13.channel = L19
      L13.encryption = L19
      L13.band = L19
      L13.channel = L19
      L13.ifname = L19
    end
    L17 = _UPVALUE0_
    L17 = L17.isStrNil
    L18 = L13.ifname
    L17 = L17(L18)
    if L17 then
      L17 = L12.apcli_get_ifname_form_band
      L18 = L13.band
      L17 = L17(L18)
      L13.ifname = L17
    end
    L17 = L12.apcli_get_ifnames
    L17 = L17()
    L18 = nil
    for L22, L23 in L19, L20, L21 do
      L24 = L13.ifname
      if L23 ~= L24 then
        L24 = L12.apcli_get_wifinet
        L25 = L23
        L24 = L24(L25)
        if L24 then
          L24 = L12.apcli_set_inactive
          L25 = L23
          L24(L25)
        end
      end
    end
    L19(L20)
    for L23 = L20, L21, L22 do
      L24 = L12.apcli_get_connect
      L25 = L13.ifname
      L24, L25 = L24(L25)
      if L24 then
        break
      end
      L26 = os
      L26 = L26.execute
      L27 = "sleep 3"
      L26(L27)
    end
    L14.connected = L19
    L14.ifname = L20
  end
  L17 = L14.connected
  if L17 then
    L17 = require
    L18 = "xiaoqiang.util.XQLanWanUtil"
    L17 = L17(L18)
    if L16 ~= "wifiapmode" and L16 ~= "lanapmode" then
      L18 = backupConfigs
      L18()
    end
    L18 = setWanAuto
    L18(L19)
    L18 = _UPVALUE1_
    L18 = L18.exec
    L18 = L18(L19)
    if not L19 then
      L19(L20)
    end
    L23, L24, L25, L26, L27, L28, L29, L30, L31, L32, L33, L34, L35, L36, L37 = L20(L21)
    dhcpcode = L19
    if L20 then
      if L20 == 0 then
        L23 = 4
        L22(L23)
        L23 = "wifiapmode"
        L22(L23)
        L23 = L19
        L22(L23)
        L14.ip = L19
        L23 = "luci.model.uci"
        L24 = L22
        L23 = L22.delete
        L25 = "dhcp"
        L26 = "lan"
        L23(L24, L25, L26)
        L24 = L22
        L23 = L22.delete
        L25 = "dhcp"
        L26 = "wan"
        L23(L24, L25, L26)
        L24 = L22
        L23 = L22.commit
        L25 = "dhcp"
        L23(L24, L25)
        L23, L24, L25, L26 = nil, nil, nil, nil
        L27 = _UPVALUE0_
        L27 = L27.isStrNil
        L28 = A7
        L27 = L27(L28)
        if not L27 and A8 and (A9 or A8 == "none") then
          L23 = A7
          L24 = A7
          L25 = A9
          L26 = A8
        end
        L27 = _UPVALUE0_
        L27 = L27.isStrNil
        L28 = A10
        L27 = L27(L28)
        if not L27 then
          L24 = A10
        end
        L27 = _UPVALUE0_
        L27 = L27.isStrNil
        L28 = L13.band
        L27 = L27(L28)
        if not L27 then
          L27 = L13.band
          L28 = L27
          L27 = L27.match
          L29 = "2g"
          L27 = L27(L28, L29)
          if L27 then
            L27 = L12.setWifiBasicInfo
            L28 = 1
            L29 = L23
            L30 = L25
            L31 = L26
            L32 = nil
            L33 = "max"
            L34, L35 = nil, nil
            L36 = "0"
            L37 = nil
            L27(L28, L29, L30, L31, L32, L33, L34, L35, L36, L37)
            L27 = L12.setWifiBasicInfo
            L28 = 2
            L29 = L24
            L30 = L25
            L31 = L26
            L32, L33, L34, L35, L36, L37 = nil, nil, nil, nil, nil, nil
            L27(L28, L29, L30, L31, L32, L33, L34, L35, L36, L37)
          else
            L27 = L12.setWifiBasicInfo
            L28 = 1
            L29 = L23
            L30 = L25
            L31 = L26
            L32, L33, L34, L35, L36, L37 = nil, nil, nil, nil, nil, nil
            L27(L28, L29, L30, L31, L32, L33, L34, L35, L36, L37)
            L27 = L12.setWifiBasicInfo
            L28 = 2
            L29 = L24
            L30 = L25
            L31 = L26
            L32 = nil
            L33 = "max"
            L34, L35 = nil, nil
            L36 = "0"
            L37 = nil
            L27(L28, L29, L30, L31, L32, L33, L34, L35, L36, L37)
          end
        else
          L27 = L12.setWifiBasicInfo
          L28 = 1
          L29 = L23
          L30 = L25
          L31 = L26
          L32, L33, L34, L35 = nil, nil, nil, nil
          L36 = "0"
          L37 = nil
          L27(L28, L29, L30, L31, L32, L33, L34, L35, L36, L37)
          L27 = L12.setWifiBasicInfo
          L28 = 2
          L29 = L24
          L30 = L25
          L31 = L26
          L32, L33, L34, L35 = nil, nil, nil, nil
          L36 = "0"
          L37 = nil
          L27(L28, L29, L30, L31, L32, L33, L34, L35, L36, L37)
        end
        L27 = L12.apcli_enable
        L28 = L13
        L27(L28)
        L27 = L12.setWiFiMacfilterModel
        L28 = false
        L27(L28)
        L27 = L12.setGuestWifi
        L28 = 1
        L29, L30, L31 = nil, nil, nil
        L32 = 0
        L33 = nil
        L27(L28, L29, L30, L31, L32, L33)
        L27 = _UPVALUE0_
        L27 = L27.isStrNil
        L28 = L23
        L27 = L27(L28)
        if L27 then
          L27 = L12.getWifiBasicInfo
          L28 = 1
          L27 = L27(L28)
          if L27 ~= nil then
            L28 = L27.ssid
            L14.ssid = L28
          end
        else
          L14.ssid = L23
        end
        L27 = _UPVALUE0_
        L27 = L27.isStrNil
        L28 = L24
        L27 = L27(L28)
        if L27 then
          L27 = L12.getWifiBasicInfo
          L28 = 2
          L27 = L27(L28)
          if L27 ~= nil then
            L28 = L27.ssid
            L14.ssid5G = L28
          end
        else
          L14.ssid5G = L24
        end
    end
    else
      L20(L21)
      L20()
    end
  end
  L17 = L14.connected
  if L17 then
    L17 = L14.ip
    if L17 ~= "" then
      goto lbl_414
    end
  end
  L17 = L13.reconnect
  if L17 == nil then
    L17 = L12.apcli_get_ifnames
    L17 = L17()
    L18 = nil
    for L22, L23 in L19, L20, L21 do
      L24 = L12.apcli_set_inactive
      L25 = L23
      L24(L25)
    end
    if L16 then
      L21.ifname = L19
      L23 = L20
      L24 = "ssid"
      L21.ssid = L22
      L23 = L20
      L24 = "ssid"
      L21.cmdssid = L22
      L23 = L20
      L24 = "key"
      L21.password = L22
      L23 = L20
      L24 = "key"
      L21.cmdpassword = L22
      L23 = L20
      L24 = "encryption"
      L21.encryption = L22
      L23 = L20
      L24 = "enctype"
      L21.enctype = L22
      L23 = L21
      L22(L23)
    else
    end
  end
  L14.conerrmsg = "Connect faild!"
  ::lbl_414::
  return L14
end
setWifiAPMode = L5
function L5(A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)
  local L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25, L26
  L11 = require
  L12 = "xiaoqiang.util.XQWifiUtil"
  L11 = L11(L12)
  L12 = {}
  L12.ifname = ""
  L12.ssid = A0
  L12.cmdssid = A0
  L12.password = A1
  L12.cmdpassword = A1
  L12.encryption = A3
  L12.enctype = A2
  L12.band = A4
  L12.channel = A5
  L12.bw = A6
  L13 = {}
  L13.connected = false
  L13.conerrmsg = ""
  L13.scan = true
  L14 = nil
  L15 = _UPVALUE0_
  L15 = L15.getNetMode
  L15 = L15()
  L15 = L15 ~= nil
  L16 = L12.ssid
  if L16 then
    L16 = L12.ssid
    L12.cmdssid = L16
    L16 = L12.password
    L12.cmdpassword = L16
    L16 = L11.apcli_check_apcliitem
    L16 = L16(L17)
    if L16 then
      L16 = _UPVALUE1_
      L16 = L16.log
      L16(L17, L18)
      L16 = L11.apcli_get_scanlist
      L16 = L16(L17)
      for L21, L22 in L18, L19, L20 do
        if L22 then
          L23 = L22.ssid
          if L23 == A0 then
            break
          end
        end
      end
      if not L17 then
        L13.scan = false
        return L13
      end
      L12.enctype = L18
      L12.channel = L18
      L12.encryption = L18
      L12.band = L18
      L12.channel = L18
      L12.ifname = L18
    end
    L16 = _UPVALUE0_
    L16 = L16.isStrNil
    L16 = L16(L17)
    if L16 then
      L16 = L11.apcli_get_ifname_form_band
      L16 = L16(L17)
      L12.ifname = L16
    end
    L16 = L11.apcli_get_ifnames
    L16 = L16()
    for L21, L22 in L18, L19, L20 do
      L23 = L12.ifname
      if L22 ~= L23 then
        L23 = L11.apcli_set_inactive
        L24 = L22
        L23(L24)
      end
    end
    L18(L19)
    for L22 = L19, L20, L21 do
      L23 = L11.apcli_get_connect
      L24 = L12.ifname
      L23, L24 = L23(L24)
      if L23 then
        break
      end
      L25 = os
      L25 = L25.execute
      L26 = "sleep 2"
      L25(L26)
    end
    L13.connected = L18
  end
  L16 = L13.connected
  if L16 then
    L16 = require
    L16 = L16(L17)
    if not L15 then
      L17()
    end
    L13.oldlan = L18
  end
  L16 = require
  L16 = L16(L17)
  L16 = L16.cursor
  L16 = L16()
  for L20, L21 in L17, L18, L19 do
    L13[L20] = L21
  end
  return L13
end
appSetWifiAPMode = L5
function L5()
  local L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23, L24, L25
  L0 = require
  L1 = "xiaoqiang.util.XQWifiUtil"
  L0 = L0(L1)
  L1 = _UPVALUE0_
  L1 = L1.getNetMode
  L1 = L1()
  L1 = L1 ~= nil
  L2 = io
  L2 = L2.open
  L3 = "/tmp/luci_set_wifi_ap_mode_result"
  L4 = "r"
  L2 = L2(L3, L4)
  if L2 ~= nil then
    L4 = L2
    L3 = L2.read
    L5 = "*a"
    L3 = L3(L4, L5)
    L4 = require
    L5 = "json"
    L4 = L4(L5)
    L5 = L4.decode
    L6 = L3
    L5 = L5(L6)
    L7 = L2
    L6 = L2.close
    L6(L7)
    L6 = L5.code
    if L6 then
      L6 = L5.code
      if L6 == 0 then
        L6 = require
        L7 = "xiaoqiang.util.XQLanWanUtil"
        L6 = L6(L7)
        L7 = setWanAuto
        L7(L8)
        L7 = L5.ipaddr
        if L7 ~= nil then
          L11 = 4
          L10(L11)
          L11 = "wifiapmode"
          L10(L11)
          L11 = L7
          L10(L11)
          L11 = "luci.model.uci"
          L12 = L10
          L11 = L10.set
          L13 = "xiaoqiang"
          L14 = "common"
          L15 = "ap_hostname"
          L16 = L5.hostname
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.set
          L13 = "xiaoqiang"
          L14 = "common"
          L15 = "vendorinfo"
          L16 = L5.vendorinfo
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.commit
          L13 = "xiaoqiang"
          L11(L12, L13)
          L12 = L10
          L11 = L10.delete
          L13 = "network"
          L14 = "lan"
          L15 = "dns"
          L11(L12, L13, L14, L15)
          L12 = L10
          L11 = L10.delete
          L13 = "network"
          L14 = "vpn"
          L11(L12, L13, L14)
          L12 = L10
          L11 = L10.set
          L13 = "network"
          L14 = "lan"
          L15 = "proto"
          L16 = "static"
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.set
          L13 = "network"
          L14 = "lan"
          L15 = "type"
          L16 = "bridge"
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.set
          L13 = "network"
          L14 = "lan"
          L15 = "ipaddr"
          L16 = L7
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.set
          L13 = "network"
          L14 = "lan"
          L15 = "netmask"
          L16 = L5.netmask
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.set
          L13 = "network"
          L14 = "lan"
          L15 = "gateway"
          L16 = L5.gateway
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.set
          L13 = "network"
          L14 = "lan"
          L15 = "mtu"
          L16 = L5.mtu
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.set
          L13 = "network"
          L14 = "lan"
          L15 = "dns"
          L16 = L5.dns1
          L11(L12, L13, L14, L15, L16)
          L12 = L10
          L11 = L10.commit
          L13 = "network"
          L11(L12, L13)
          L12 = L10
          L11 = L10.delete
          L13 = "dhcp"
          L14 = "lan"
          L11(L12, L13, L14)
          L12 = L10
          L11 = L10.delete
          L13 = "dhcp"
          L14 = "wan"
          L11(L12, L13, L14)
          L12 = L10
          L11 = L10.commit
          L13 = "dhcp"
          L11(L12, L13)
          L11, L12, L13, L14 = nil, nil, nil, nil
          L15 = _UPVALUE0_
          L15 = L15.isStrNil
          L16 = nssid
          L15 = L15(L16)
          if not L15 then
            L15 = nencryption
            if L15 then
              L15 = npassword
              if not L15 then
                L15 = nencryption
                if L15 ~= "none" then
                  goto lbl_165
                end
              end
              L11 = nssid
              L12 = nssid
              L13 = npassword
              L14 = nencryption
            end
          end
          ::lbl_165::
          L15 = _UPVALUE0_
          L15 = L15.isStrNil
          L16 = nssid5G
          L15 = L15(L16)
          if not L15 then
            L12 = nssid5G
          end
          L15 = _UPVALUE0_
          L15 = L15.isStrNil
          L16 = L5.band
          L15 = L15(L16)
          if not L15 then
            L15 = L5.band
            L16 = L15
            L15 = L15.match
            L17 = "2g"
            L15 = L15(L16, L17)
            if L15 then
              L15 = L0.setWifiBasicInfo
              L16 = 1
              L17 = L11
              L18 = L13
              L19 = L14
              L20 = nil
              L21 = "max"
              L22, L23, L24, L25 = nil, nil, nil, nil
              L15(L16, L17, L18, L19, L20, L21, L22, L23, L24, L25)
              L15 = L0.setWifiBasicInfo
              L16 = 2
              L17 = L12
              L18 = L13
              L19 = L14
              L20, L21, L22, L23, L24, L25 = nil, nil, nil, nil, nil, nil
              L15(L16, L17, L18, L19, L20, L21, L22, L23, L24, L25)
            else
              L15 = L0.setWifiBasicInfo
              L16 = 1
              L17 = L11
              L18 = L13
              L19 = L14
              L20, L21, L22, L23, L24, L25 = nil, nil, nil, nil, nil, nil
              L15(L16, L17, L18, L19, L20, L21, L22, L23, L24, L25)
              L15 = L0.setWifiBasicInfo
              L16 = 2
              L17 = L12
              L18 = L13
              L19 = L14
              L20 = nil
              L21 = "max"
              L22, L23, L24, L25 = nil, nil, nil, nil
              L15(L16, L17, L18, L19, L20, L21, L22, L23, L24, L25)
            end
          else
            L15 = L0.setWifiBasicInfo
            L16 = 1
            L17 = L11
            L18 = L13
            L19 = L14
            L20, L21, L22, L23, L24, L25 = nil, nil, nil, nil, nil, nil
            L15(L16, L17, L18, L19, L20, L21, L22, L23, L24, L25)
            L15 = L0.setWifiBasicInfo
            L16 = 2
            L17 = L12
            L18 = L13
            L19 = L14
            L20, L21, L22, L23, L24, L25 = nil, nil, nil, nil, nil, nil
            L15(L16, L17, L18, L19, L20, L21, L22, L23, L24, L25)
          end
          L15 = L0.apcli_enable
          L16 = L5
          L15(L16)
          L15 = L0.setWiFiMacfilterModel
          L16 = false
          L15(L16)
          L15 = L0.setGuestWifi
          L16 = 1
          L17, L18, L19 = nil, nil, nil
          L20 = 0
          L21 = nil
          L15(L16, L17, L18, L19, L20, L21)
          L15 = _UPVALUE0_
          L15 = L15.isStrNil
          L16 = L11
          L15 = L15(L16)
          if L15 then
            L15 = L0.getWifiBasicInfo
            L16 = 1
            L15 = L15(L16)
            if L15 ~= nil then
              L16 = L15.ssid
              L5.ssid = L16
            end
          else
            L5.ssid = L11
          end
          L15 = _UPVALUE0_
          L15 = L15.isStrNil
          L16 = L12
          L15 = L15(L16)
          if L15 then
            L15 = L0.getWifiBasicInfo
            L16 = 2
            L15 = L15(L16)
            if L15 ~= nil then
              L16 = L15.ssid
              L5.ssid5G = L16
            end
          else
            L5.ssid5G = L12
          end
        else
        end
      end
    end
    L6 = L5.code
    if L6 == 0 then
      L6 = L5.ipaddr
      if L6 ~= nil then
        goto lbl_353
      end
    end
    L6 = _UPVALUE1_
    L6 = L6.log
    L7 = 6
    L6(L7, L8)
    L6 = L0.apcli_get_ifnames
    L6 = L6()
    L7 = nil
    for L11, L12 in L8, L9, L10 do
      L13 = L0.apcli_set_inactive
      L14 = L12
      L13(L14)
    end
    if L1 then
      L10.ifname = L8
      L12 = L9
      L11 = L9.get
      L13 = "ssid"
      L11 = L11(L12, L13)
      L10.ssid = L11
      L12 = L9
      L11 = L9.get
      L13 = "ssid"
      L11 = L11(L12, L13)
      L10.cmdssid = L11
      L12 = L9
      L11 = L9.get
      L13 = "key"
      L11 = L11(L12, L13)
      L11 = L11 or L11
      L10.password = L11
      L12 = L9
      L11 = L9.get
      L13 = "key"
      L11 = L11(L12, L13)
      L11 = L11 or L11
      L10.cmdpassword = L11
      L12 = L9
      L11 = L9.get
      L13 = "encryption"
      L11 = L11(L12, L13)
      L11 = L11 or L11
      L10.encryption = L11
      L12 = L9
      L11 = L9.get
      L13 = "enctype"
      L11 = L11(L12, L13)
      L11 = L11 or L11
      L10.enctype = L11
      L11 = _UPVALUE1_
      L11 = L11.log
      L12 = 6
      L13 = "Connect faild Rollback to old apcliitem"
      L11(L12, L13)
      L11 = L0.apcli_set_connect
      L12 = L10
      L11(L12)
    else
    end
    L5.conerrmsg = "Connect faild!"
  end
  ::lbl_353::
end
setWifiAPModeConfig = L5
function L5(A0)
  local L1, L2, L3
  L1 = require
  L2 = "xiaoqiang.util.XQWifiUtil"
  L1 = L1(L2)
  L2 = _UPVALUE0_
  L2 = L2.isStrNil
  L3 = A0
  L2 = L2(L3)
  if L2 then
    A0 = "2g"
  end
  L2 = L1.apcli_get_ifname_form_band
  L3 = A0
  L2 = L2(L3)
  ifname = L2
  L2 = L1.apcli_set_inactive
  L3 = ifname
  L2(L3)
end
extednwifi_disconnect = L5
function L5(A0, A1, A2, A3, A4, A5)
  local L6, L7, L8, L9, L10, L11, L12, L13, L14, L15, L16, L17, L18, L19, L20, L21, L22, L23
  L6 = require
  L7 = "xiaoqiang.util.XQWifiUtil"
  L6 = L6(L7)
  L7 = {}
  L7.ifname = ""
  L7.ssid = A0
  L7.cmdssid = A0
  L7.password = A1
  L7.cmdpassword = A1
  L7.encryption = A3
  L7.enctype = A2
  L7.band = A4
  L7.channel = A5
  L8 = {}
  L8.connected = false
  L8.dhcpcode = -1
  L8.ip = ""
  L9 = nil
  L10 = _UPVALUE0_
  L10 = L10.getNetMode
  L10 = L10()
  L10 = L10 ~= nil
  if L11 then
    L7.ssid = L11
    L7.password = L11
    L7.cmdssid = L11
    L7.cmdpassword = L11
    if L11 then
      for L16, L17 in L13, L14, L15 do
        if L17 then
          if L18 == A0 then
            break
          end
        end
      end
      if not L12 then
        return L8
      end
      L7.enctype = L13
      L7.channel = L13
      L7.encryption = L13
      L7.band = L13
      L7.channel = L13
      L7.ifname = L13
    end
    if L11 then
      L7.ifname = L11
    end
    for L14 = L11, L12, L13 do
      L15(L16, L17)
      for L19 = L16, L17, L18 do
        L20 = L6.apcli_get_connect
        L21 = L7.ifname
        L20, L21 = L20(L21)
        if L20 then
          break
        end
        L22 = os
        L22 = L22.execute
        L23 = "sleep 2"
        L22(L23)
      end
      L8.connected = L15
      if L15 == true then
        break
      end
    end
  end
  if L11 then
    L8.dhcpcode = L14
    if L14 == 0 then
      L8.ip = L14
    end
  end
  if L11 then
    if L11 ~= "" then
      goto lbl_218
    end
  end
  L11(L12)
  if L10 then
    L13.ifname = L11
    L13.ssid = L14
    L13.cmdssid = L14
    L13.password = L14
    L13.cmdpassword = L14
    L13.encryption = L14
    L13.enctype = L14
    if L14 == "0" then
      L15(L16)
    else
    end
  end
  ::lbl_218::
  return L8
end
extendwifi_set_connect = L5
