
<html>
<head>
<meta HTTP-EQUIV='Pragma' CONTENT='no-cache'>
<meta http-equiv='Content-Type' content='text/html; charset=UTF-8'>
<link rel="stylesheet" rev="stylesheet" href="/css/content.css" type="text/css">
<script language="javascript" src="/js/check.js"></script>
<script language="javascript" src="/js/jquery.js"></script>
<script language="javascript" src="/js/init.js"></script>
<script language="javascript" src="/js/t_utils.js"></script>
<script language="javascript" src="/js/tri.js"></script>

<script language='javascript' src='/js/project.js'></script>
<script   language="javascript"> 
function __init()
{
    if(IsExistedFunction("project_init") == true) 
        project_init(GetCurrentFileName());
}
function ConnectionTuple()
{
    this.Path = "";
    this.Name = "";
    this.ServiceList = "";
    this.ConnectionType = "";
}
var index = 0;
var ConnectionS = new Array();
//WAN Device
<!--#getobject "InternetGatewayDevice.WANDevice." -->
<!--#getobject "InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice." -->
<!--#getobject "InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection. Name X_CT-COM_ServiceList ConnectionType X_CT-COM_IPMode" -->
    ConnectionS[index] = new ConnectionTuple();   
    ConnectionS[index].Path = "<!--#path -->";
    ConnectionS[index].Name = "<!--#leaf "1"-->";
    ConnectionS[index].ServiceList = "<!--#leaf "2"-->";
    ConnectionS[index].ConnectionType = "<!--#leaf "3"-->";
    ConnectionS[index].IPMode= "<!--#leaf "4"-->";
    index++;
<!--#endgetobject -->

<!--#getobject "InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection. Name X_CT-COM_ServiceList ConnectionType X_CT-COM_IPMode" -->
    ConnectionS[index] = new ConnectionTuple();   
    ConnectionS[index].Path = "<!--#path -->";
    ConnectionS[index].Name = "<!--#leaf "1"-->";
    ConnectionS[index].ServiceList = "<!--#leaf "2"-->";
    ConnectionS[index].ConnectionType = "<!--#leaf "3"-->";
    ConnectionS[index].IPMode= "<!--#leaf "4"-->";
    index++;
<!--#endgetobject -->
<!--#endgetobject -->    
<!--#endgetobject -->

<!--#getobject "InternetGatewayDevice.X_CT-COM_Multicast.MLDSnooping. Enable" --> 
    var G_SnoopingEnable = "<!--#leaf "1"-->";
<!--#endgetobject -->

<!--#getobject "InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy. Enable WANPathName DELWANPathName Version QI QRI LMQI ROBUST MMDS FLEnable" --> 
    var G_ProxyEnable = "<!--#leaf "1"-->";
    var G_WANPathName = "<!--#leaf "2"-->";
    var G_DELWANPathName = "<!--#leaf "3"-->"
    var G_VERSION = "<!--#leaf "4"-->";
    var G_QI = "<!--#leaf "5"-->";
    var G_QRI = "<!--#leaf "6"-->";
    var G_LMQI = "<!--#leaf "7"-->";
    var G_ROBUST = "<!--#leaf "8"-->";
    var G_MMDS = "<!--#leaf "9"-->";
    var G_FLEnable = "<!--#leaf "10"-->";
<!--#endgetobject -->

var num_wan = 0;
var selected_wans = 0;
var selected_wans_count = 0;

function frmLoad(){
	  
    setValue('INPUT_Snooping_Enable',G_SnoopingEnable);
    setValue('INPUT_Proxy_Enable',G_ProxyEnable );
    setValue('select_igmpversion',G_VERSION);
    setValue('INPUT_QI',G_QI);
    setValue('INPUT_QRI',G_QRI);
    setValue('INPUT_LMQI',G_LMQI);
    setValue('INPUT_RV',G_ROBUST);
    setValue('INPUT_MMDS',G_MMDS);
    setValue('INPUT_FLE',G_FLEnable);
}

function value_limit()
{
	if(getValue('INPUT_QI') < 60)
	{
		  top.AlertMsg(getStr("LK_QI_Tips"));
	    return -1;
  }
	if(getValue('INPUT_QRI') - getValue('INPUT_QI') > 0) 
	{   
		  top.AlertMsg(getStr("LK_QRI_Tips"));
		  return -1;
	}
	if(getValue('INPUT_LMQI') > 128)
	{
		  top.AlertMsg(getStr("LK_LMQI_Tips"));
	    return -1;
  }
  if(getValue('INPUT_RV') < 2 )
	{
		  top.AlertMsg(getStr("LK_RV_Tips1"));
	    return -1;
  }
  if(getValue('INPUT_RV') > 7)
	{
		  top.AlertMsg(getStr("LK_RV_Tips2"));
	    return -1;
  }
  if(getValue('INPUT_RV') > 3)
	{
		  top.AlertMsg(getStr("LK_RV_Tips3"));
	    return 0;
  }
  if(getValue('INPUT_MMDS') > 16)
	{
		  top.AlertMsg(getStr("LK_MMDS_Tips"));
	    return -1;
  }
}

function uiSubmit_mld(){
	  if(value_limit() == -1) return -1;
    var df = document.app_mccfgform;
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.Version', getValue('select_igmpversion'));
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.QI', getValue('INPUT_QI'));
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.QRI', getValue('INPUT_QRI'));
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.LMQI', getValue('INPUT_LMQI'));
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.ROBUST', getValue('INPUT_RV'));
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.MMDS', getValue('INPUT_MMDS'));
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.FLEnable', getValue('INPUT_FLE'));
    df.submit();
}

function uiSubmit_snoop(){
	if(!validateCode())
			return false;

    var df = document.app_mccfgform;
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDSnooping.Enable', getValue('INPUT_Snooping_Enable'));
    df.submit();
}

function uiSubmit_proxy(){
    var df = document.app_mccfgform;
    var WanPathName = '';
    var DELWANPathName = '';

    for(var i = 0; i < num_wan; i++){
        if($('INPUT_WanConn' + i).checked){
            WanPathName += $('INPUT_WanConn' + i).value + ',';
        }
        else
        {
            DELWANPathName += $('INPUT_WanConn' + i).value + ',';
        }
    } 
	if(!validateCode(2))
			return false;
    AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.Enable', getValue('INPUT_Proxy_Enable'));
    if(WanPathName == null || WanPathName == "" ){
         AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.WANPathName', "");
    }else{
         AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.WANPathName', WanPathName.replace(/(^,*)|(,*$)/g,''));
    }
    if (DELWANPathName == null || DELWANPathName == "" )
    {
        AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.DELWANPathName', "");
    }
    else
    {
        AddElements(df, 'InternetGatewayDevice.X_CT-COM_Multicast.MLDProxy.DELWANPathName', DELWANPathName.replace(/(^,*)|(,*$)/g,''));
    }
    df.submit();
}

function createTable(){
    var array_value = [];
    var check_flag = 0;
    var tmpwan_id;
    var k=0;
    selected_wans = G_WANPathName.split(",");
    selected_wans_count = G_WANPathName.split(",").length;
    for(var i = 0, j = 0, _len = ConnectionS.length; i < _len; i++){
        if(ConnectionS[i].IPMode == "1" || isBridgedConn(ConnectionS[i].ConnectionType) || ConnectionS[i].ServiceList == "TR069" || ConnectionS[i].ServiceList == "VOIP"){
            continue;
        }else{
		if(k%2==0)
            document.write("<tr class='OddRowB'> ");
		else
		document.write('<tr class="EvenRowB">');
		k++;
            document.write("<td scope='col' id='wlan_connect'>"+ConnectionS[i].Name+"</td>");
            
            document.write('<td scope="col" id="Multicast_apply"><input type="checkbox" id="INPUT_WanConn' + j + '" value="' + ConnectionS[i].Path + '" ' + (G_WANPathName.indexOf(ConnectionS[i].Path) > -1 ? 'checked' : '') + '></td>');
            document.write("</tr>");
        }
        num_wan = ++j;
    }
		if(k == 0)
		document.write("<tr class='OddRowB'><td colspan='2'>"+getStr('LK_NoRule')+"</td></tr>");
    
}    
</script> 
  </head>
  <body onLoad='frmLoad()'>
    <form method="post" name ="app_mccfgform" action="/cgi-bin/setup.cgi?page/applications/app_mld.shtml">
    </form>
        <form method="get" >
<script>printBeginContent()</script>
<script>SetContentTitle(getStr('LK_MLDSettings'))</script>
<table class="ContentTableNoColor" cellspacing="0" cellpadding="0">
       <tr class="FlagText">
          <td langkey="LK_MLDTips"></td>
       </tr>
</table>
<br>
<table cellpadding="0" cellspacing="0" class="ContentTableNoColor" width="600">
<tr>	     
	      <td langkey="LK_DEFAULT_VERSION" width="300"></td>  
        <td>
            <select id="select_igmpversion" name="select_igmpversion">
                <option value="2">MLD v2</option>
                <option value="1">MLD v1</option>          
            </select></td>
</tr>
<tr>
	<td langkey="LK_QUERY_INTERVAL"></td>
	<td><input type="text" id="INPUT_QI"></td>
</tr>
<tr>
	<td langkey="LK_QUERY_RESPONSE_INTERVAL"></td>
	<td><input type="text" id="INPUT_QRI"></td>
</tr>
<tr>
	<td langkey="LK_LAST_MEMBER_QUERY_INTERVAL"></td>
	<td><input type="text" id="INPUT_LMQI"></td>
</tr>
<tr>
	<td langkey="LK_ROBUSTNESS_VALUE"></td>
	<td><input type="text" id="INPUT_RV"></td>
</tr>
<tr>
	<td langkey="LK_MMDS1"></td>
	<td><input type="text" id="INPUT_MMDS"></td>
</tr>

<tr>
	<td langkey="LK_FAST_LEAVE_ENABLE"></td>
	<td><input type="checkbox" id="INPUT_FLE"></td>
</tr>
<tr id="BUTTON_BLOCK" class="spaceLine"><td>&nbsp;</td></tr>
<tr>
	<td colspan="2"><script>PrintTriButton("submit_igmp",getStr('LK_Apply'),"uiSubmit_mld()")</script>&nbsp;
	<script>PrintTriButton("refresh",getStr('LK_Refresh'),"uiPageRefresh()")</script></td>
</tr>
</table>
<br>
<table cellpadding="0" cellspacing="0" class="ContentTableNoColor">
<tr>
	<td width="200" langkey="LK_EnableMLDSnoopingg"></td>
        <td><input type="checkbox" id="INPUT_Snooping_Enable"></td>
</tr>
<tr id="BUTTON_BLOCK" class="spaceLine"><td>&nbsp;</td></tr>
<tr class="spaceLine"><td colspan="2">&nbsp;</td></tr>
<tr>
	<td colspan="2"><script>PrintTriButton("submit_snoop",getStr('LK_Apply'),"uiSubmit_snoop()")</script>&nbsp;
	<script>PrintTriButton("refresh",getStr('LK_Refresh'),"uiPageRefresh()")</script></td>
</tr>
</table>
<br>
<table cellpadding="0" cellspacing="0" class="ContentTableNoColor">
<tr>
	<td width="200" langkey="LK_EnableMLDProxyy"></td>
	<td><input type="checkbox" id="INPUT_Proxy_Enable"></td>
</tr>
<tr id="BUTTON_BLOCK2" class="spaceLine"><td>&nbsp;</td></tr>
</table>
<table class="ContentBorder" width="300" cellpadding="0" cellspacing="0" id="td_multicast">
<tr class="TitleRow">
	<td langkey="LK_WANConnection"></td>
	<td langkey="LK_EnableMLD"></td>     
</tr>
 <script language="javascript">  
                 createTable();
            </script>
</table>
<br>
<table class="ContentTableNoColor">
<tr>
	<td><script>PrintTriButton("submit_proxy",getStr('LK_Apply'),"uiSubmit_proxy()")</script>&nbsp;
	<script>PrintTriButton("refresh",getStr('LK_Refresh'),"uiPageRefresh()")</script></td>
</tr>
</table>
<script>printEndContent()</script>
    </form> 
</body></html> 
