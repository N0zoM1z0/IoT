
<html>
<head>
<meta HTTP-EQUIV='Pragma' CONTENT='no-cache'>
<meta http-equiv='Content-Type' content='text/html; charset=UTF-8'>
<link rel="stylesheet" rev="stylesheet" href="/css/content.css" type="text/css">
<script language="javascript" src="/js/check.js"></script>
<script language="javascript" src="/js/jquery.js"></script>
<script language="javascript" src="/js/t_utils.js"></script>
<script language="javascript" src="/js/init.js"></script>
<script language="javascript" src="/js/tri.js"></script>
<script language='javascript' src='/js/project.js'></script>
<script language="javascript"> 
	

function C_6RDTuple()
{    
		this.Wan_Name = "";
		this.Wan_ServiceList = "";
		this.Wan_ConnectionType = "";
		this.Wan_IPMode = "";
		this.Wan_Path = "";
	this.C6rd_Enable = "";	
	this.C6RD_Name = "";
    this.C6RD_Mech = "";
    this.C6RD_Lan = "";
    this.C6RD_Act = "";
    this.C6RD_MaskLen = "";
	this.C6RD_Prefix = "";
	this.C6RD_PrefixLen = "";
    this.C6RD_BorderRelay = "";
}	
	


var index = 0;
var ConnectionS = new Array();
<!--#getobject "InternetGatewayDevice.WANDevice." -->
<!--#getobject "InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice." -->
    <!--#getobject "InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection. Name X_CT-COM_ServiceList ConnectionType X_CT-COM_IPMode X_TRI_6RD_Enable X_TRI_6RD_TunnelName X_TRI_6RD_Mechanism X_TRI_6RD_LAN X_TRI_6RD_Act X_TRI_6RD_IPv4Mask_LEN X_TRI_6RD_Prefix X_TRI_6RD_PrefixLen X_TRI_6RD_BorderRelay" -->
    ConnectionS[index] = new C_6RDTuple();  
    ConnectionS[index].Wan_Name = "<!--#leaf "1"-->";
    ConnectionS[index].Wan_ServiceList = "<!--#leaf "2"-->";
    ConnectionS[index].Wan_ConnectionType = "<!--#leaf "3"-->";
    ConnectionS[index].Wan_IPMode = "<!--#leaf "4"-->";
    ConnectionS[index].Wan_Path = "<!--#path -->"; 
	ConnectionS[index].C6RD_Enable = "<!--#leaf "5"-->";
	ConnectionS[index].C6RD_Name = "<!--#leaf "6"-->";
    ConnectionS[index].C6RD_Mech = "<!--#leaf "7"-->";
    ConnectionS[index].C6RD_Lan = "<!--#leaf "8"-->";
    ConnectionS[index].C6RD_Act = "<!--#leaf "9"-->";
    ConnectionS[index].C6RD_MaskLen = "<!--#leaf "10"-->";
	ConnectionS[index].C6RD_Prefix = "<!--#leaf "11"-->";
	ConnectionS[index].C6RD_PrefixLen = "<!--#leaf "12"-->";
 	  ConnectionS[index].C6RD_BorderRelay = "<!--#leaf "13"-->";
    index++;
    <!--#endgetobject -->

    <!--#getobject "InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection. Name X_CT-COM_ServiceList ConnectionType X_CT-COM_IPMode X_TRI_6RD_Enable X_TRI_6RD_TunnelName X_TRI_6RD_Mechanism X_TRI_6RD_LAN X_TRI_6RD_Act X_TRI_6RD_IPv4Mask_LEN X_TRI_6RD_Prefix X_TRI_6RD_PrefixLen X_TRI_6RD_BorderRelay" -->
    ConnectionS[index] = new C_6RDTuple();  
    ConnectionS[index].Wan_Name = "<!--#leaf "1"-->";
    ConnectionS[index].Wan_ServiceList = "<!--#leaf "2"-->";
    ConnectionS[index].Wan_ConnectionType = "<!--#leaf "3"-->";
    ConnectionS[index].Wan_IPMode = "<!--#leaf "4"-->";
	ConnectionS[index].Wan_Path = "<!--#path -->"; 
	ConnectionS[index].C6RD_Enable = "<!--#leaf "5"-->";
    ConnectionS[index].C6RD_Name = "<!--#leaf "6"-->";
    ConnectionS[index].C6RD_Mech = "<!--#leaf "7"-->";
    ConnectionS[index].C6RD_Lan = "<!--#leaf "8"-->";
    ConnectionS[index].C6RD_Act = "<!--#leaf "9"-->";
    ConnectionS[index].C6RD_MaskLen = "<!--#leaf "10"-->";
	ConnectionS[index].C6RD_Prefix = "<!--#leaf "11"-->";
	ConnectionS[index].C6RD_PrefixLen = "<!--#leaf "12"-->";
 	ConnectionS[index].C6RD_BorderRelay = "<!--#leaf "13"-->";
    index++;
    <!--#endgetobject -->
<!--#endgetobject -->
<!--#endgetobject -->


function createConnNameOptions()
{
    var text = [];
    var value = [];
	var conn = 0;


    for (i = 0; i < ConnectionS.length; i++)
	{   


			if(ConnectionS[i].Wan_IPMode != '2' && !isBridgedConn(ConnectionS[i].Wan_ConnectionType) && isINTERNETService(ConnectionS[i].Wan_ServiceList)){
			    text[conn] = ConnectionS[i].Wan_Name;
				value[conn] = i;            
				conn++; 
			}
    }
    if (value.length > 0)
        createOptions('INPUT_Wan', text, value);
}

function __init()
{
    var cur_index = 0;
    createConnNameOptions();
	
    if (ConnectionS.length != 0)
    {
        setValue("INPUT_Enable", ConnectionS[cur_index].C6RD_Enable);	
        setValue("INPUT_NAME", ConnectionS[cur_index].C6RD_Name);
        setValue("INPUT_Mech", ConnectionS[cur_index].C6RD_Mech);
        setValue("INPUT_Lan", ConnectionS[cur_index].C6RD_Lan);
        setValue("INPUT_Act", ConnectionS[cur_index].C6RD_Act);
        setValue("INPUT_MaskLen", ConnectionS[cur_index].C6RD_MaskLen);
        setValue("INPUT_Prefix", ConnectionS[cur_index].C6RD_Prefix);
        setValue("INPUT_PrefixLen", ConnectionS[cur_index].C6RD_PrefixLen);
        setValue("INPUT_BoarderRelay", ConnectionS[cur_index].C6RD_BorderRelay); 

        if (ConnectionS[cur_index].C6RD_Act == 2) 
        {
            document.getElementById("INPUT_MaskLen").disabled = true;
            document.getElementById("INPUT_Prefix").disabled = true;
            document.getElementById("INPUT_PrefixLen").disabled = true;
            document.getElementById("INPUT_BoarderRelay").disabled = true;
        }
    }

    if(IsExistedFunction("project_init") == true) 
        project_init(GetCurrentFileName());
}

function update(){
		var cur_index;
    cur_index = getValue('INPUT_Wan');
    
    if (cur_index < 0)
    	return;

    setValue("INPUT_Enable", ConnectionS[cur_index].C6RD_Enable);
    setValue("INPUT_NAME", ConnectionS[cur_index].C6RD_Name);
    setValue("INPUT_Mech", ConnectionS[cur_index].C6RD_Mech);
    setValue("INPUT_Lan", ConnectionS[cur_index].C6RD_Lan);
    setValue("INPUT_Act", ConnectionS[cur_index].C6RD_Act);
  	setValue("INPUT_MaskLen", ConnectionS[cur_index].C6RD_MaskLen);
	setValue("INPUT_Prefix", ConnectionS[cur_index].C6RD_Prefix);
	setValue("INPUT_PrefixLen", ConnectionS[cur_index].C6RD_PrefixLen);
  	setValue("INPUT_BoarderRelay", ConnectionS[cur_index].C6RD_BorderRelay);
}

function uiSubmit()
{
	var df = document.network_6rdsettingform;    
	var cur_index = "";
	cur_index = getValue('INPUT_Wan');
	
	if(getValue('INPUT_Wan') == '-')
	{
	    return false;
	}
	object_path = ConnectionS[cur_index].Wan_Path;
	AddElements(df, object_path+"X_TRI_6RD_Enable", getValue('INPUT_Enable'));
	AddElements(df, object_path+"X_TRI_6RD_TunnelName", getValue('INPUT_NAME'));
	AddElements(df, object_path+"X_TRI_6RD_Mechanism", getValue('INPUT_Mech'));
	AddElements(df, object_path+"X_TRI_6RD_WAN", getValue('INPUT_Wan'));
	AddElements(df, object_path+"X_TRI_6RD_LAN", getValue('INPUT_Lan'));
	AddElements(df, object_path+"X_TRI_6RD_Act", getValue('INPUT_Act'));

	if (getValue('INPUT_Act') == 1);
	{
		AddElements(df, object_path+"X_TRI_6RD_IPv4Mask_LEN", getValue('INPUT_MaskLen'));
		AddElements(df, object_path+"X_TRI_6RD_Prefix", getValue('INPUT_Prefix'));
		AddElements(df, object_path+"X_TRI_6RD_PrefixLen", getValue('INPUT_PrefixLen'));
		AddElements(df, object_path+"X_TRI_6RD_BorderRelay", getValue('INPUT_BoarderRelay'));
	}

	df.submit();
}

function uiPageRefresh()
{
	document.location.href="adv_add64.shtml";
}

var act_manu = 0;

function edit_tab_manu()
{
	document.getElementById("INPUT_MaskLen").disabled = false;
	document.getElementById("INPUT_Prefix").disabled = false;
	document.getElementById("INPUT_PrefixLen").disabled = false;
	document.getElementById("INPUT_BoarderRelay").disabled = false;
}


function edit_tab_auto()
{
	document.getElementById("INPUT_MaskLen").disabled = true;
	document.getElementById("INPUT_Prefix").disabled = true;
    document.getElementById("INPUT_PrefixLen").disabled = true;
	document.getElementById("INPUT_BoarderRelay").disabled = true;
}

</script> 
</head>

<body>
<form method="get" >
	<!--<script>printBeginContent()</script>-->
<script>SetContentTitle(getStr('LK_6in4TunnelConfiguration'))</script>
<table cellpadding="0" cellspacing="0" class="ContentTableNoColor">
<tr class="FlagText">
	<td colspan="2" langkey="LK_Currentlyonly6rdText"></td>
</tr>
<tr class="spaceLine">
	<td colspan="2">&nbsp;</td>
</tr>
<tr>
	<td width="150" langkey="LK_Enable"></td>
	<td><input type="checkbox" id="INPUT_Enable" name="INPUT_Enable" onClick="boxChecked(this)"></td>
</tr>
<tr>
	<td width="150" langkey="LK_TunnelNamee"></td>
	<td><input type="text" id="INPUT_NAME" name="INPUT_NAME"></td>
</tr>
<tr>
	<td langkey="LK_Mechanismm"></td>
	<td><select id="INPUT_Mech" name="INPUT_Mech">
		<option value="6RD">6RD</option>
	</select>
	</td>
</tr>
<tr>
	<td langkey="LK_AssociatedWANInterfacee"></td>
	<td><select id="INPUT_Wan" name="INPUT_Wan"  onChange="update()">
	<option>-</option>	
	</select>
	</td>
</tr>
</ b></ b>
<!--
<tr>
	<td langkey="LK_AssociatedLANInterfacee"></td>
	<td><select name="INPUT_Lan", id="INPUT_Lan">
		<option value="1">LAN1</option>	
		<option value="2">LAN2</option>	
		<option value="3">LAN3</option>	
		<option value="4">LAN4</option>	
	</select>
	</td>
</tr>
-->
<tr>
	<td></td>
	<td>
	<input type="radio" id="INPUT_Act_Manu" name="INPUT_Act" value="1" onClick="edit_tab_manu()">&nbsp;<span langkey="LK_Manual"></span>&nbsp;
	<input type="radio" id="INPUT_Act_Auto" name="INPUT_Act" value="2" onClick="edit_tab_auto()">&nbsp;<span langkey="LK_Automatic"></span>
	</td>
</tr>
<tr>
	<td langkey="LK_IPv4MaskLengthh"></td>
	<td><input type="text" id="INPUT_MaskLen" name="INPUT_MaskLen"></td>
</tr>
<tr>
	<td langkey="LK_6rdPrefixwithPrefixLengthh"></td>
	<td><input type="text" id="INPUT_Prefix" name="INPUT_Prefix">::/<input type="text" id="INPUT_PrefixLen" name="INPUT_PrefixLen"></td>
</tr>
<tr>
	<td langkey="LK_BorderRelayIPv4Addresss"></td>
	<td><input type="text" id="INPUT_BoarderRelay" name="INPUT_BoarderRelay"></td>
</tr>
</table>
<br>
<table class="ContentTableNoColor">
<tr>
	<td>
	<script>PrintTriButton("save",getStr("LK_Apply"),"uiSubmit()")</script>&nbsp;
	<script>PrintTriButton("refresh",getStr('LK_Refresh'),"uiPageRefresh()")</script>
	</td>
</tr>
</table>
<!--<script>printEndContent()</script>-->
</form>
<form method="post" name ="network_6rdsettingform" action="/cgi-bin/setup.cgi?page/advancedsetup/adv_add64.shtml">
</form>
</body>
</html>

